a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,img,menu,nav,section{display:block}body{line-height:1;font:1.6rem "Hiragino";background:#f1f1f1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}img{max-width:100%;height:auto;width:auto}html{font-size:.6vw}a{text-decoration:none}@font-face{font-family:"Hiragino";src:url("./font/Hiragino Mincho Pro W6.otf") format("truetype");font-style:normal;font-weight:400}@font-face{font-family:"Times New Roman";src:url(./font/times-new-roman.ttf) format("truetype");font-style:normal;font-weight:400}h1{font-size:64px}h2{font-size:48px}h3{font-size:3rem}h4{font-size:2.4rem}h5{font-size:1.8rem}h6{font-size:1.2rem}.container{max-width:1920px;padding:0 170px;margin:0 auto}:root{--theme:#ee769a;--dark:#e84979;--light:#f4a3bb;--v-light:#fffefe;--focus:rgba(238, 118, 154, 0.3);--opacity:rgba(238, 118, 154, 0.1);--v-opacity:rgba(238, 118, 154, 0.05);--black:#3f3f3f;--white:#eeeeee;--red:#ff004c;--font:Hiragino;--second-font:Times New Roman;--third-font:Roboto;--sd-trans:all 0.2s ease-out;--h-head:8rem;--h-foot:16rem;--fz-icon-lg:2rem;--fz-icon-sm:4rem;--h1:64px;--h2:48px;--h3:3rem;--h4:2.4rem;--h5:1.8rem;--h6:1.2rem}.header{background:var(--theme)}.header-inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header ul{gap:20px}.header ul li{gap:10px;color:var(--white)}.main{background:url(../img/mainBg.png) no-repeat}.header ul,.header ul li,.main-item{display:-webkit-box;display:-ms-flexbox;display:flex}.header ul li,.main-item{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.main-item{gap:20px;height:900px}.main-item-reverse{-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.main-article{display:-webkit-box;display:-ms-flexbox;display:flex;width:840px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:20px;color:var(--black);font-family:var(--font)}.main-article p{font-size:32px}.footer,.main-btn{background:var(--theme)}.main-btn{display:inline-block;margin-top:40px;color:var(--black);width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;font-size:32px;border-radius:30px;padding:48px 168px}.footer{position:fixed;bottom:0;width:100%}.footer-inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:130px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative}.footer-text{font:600 24px var(--third-font);color:#fff}.footer-red{color:var(--red)}.footer-boxes{position:relative;bottom:30%}.footer-btn{background:#000;padding:16px 124px;border-radius:12px;color:#fff;font-size:24px}.footer-exit{position:absolute}.contact-form{background:url(../img/contactBg.png) no-repeat right top;padding:150px 0 250px}.contact-form .cursive{color:#3a3a3a;font-weight:600;font-style:italic;font-size:48px;margin-bottom:20px}.contact-form .cursive span{color:var(--theme)}.contact-form .container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative}.contact-form h1{color:var(--black);margin-bottom:40px;font-size:64px}.contact-form .form{background:var(--theme);-webkit-box-shadow:inset 0 0 33px 24px #bb6780;box-shadow:inset 0 0 33px 24px #bb6780;padding:50px 120px;border-radius:56px}.contact-form .form h2{text-align:center;color:var(--black);text-shadow:-2px 1px 2px rgba(239,239,239,.79)}.contact-form .form-item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;color:var(--black);font-size:26px;margin-bottom:70px}.contact-form .form-item input{border:0;outline:0;-webkit-box-shadow:inset 3.31px 3.31px 3.31px 0 rgba(0,0,0,.25);box-shadow:inset 3.31px 3.31px 3.31px 0 rgba(0,0,0,.25);width:1058px;height:75px}.contact-form .form-logo img{width:1230px;height:693px;text-align:center}.contact-form .form-btn{background:#000;display:inline-block;margin-top:140px;font-size:26px;text-transform:uppercase;color:var(--white);border-radius:60px;padding:26px 420px}.contact-form .form-footer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.contact-form .form-footer .socials,.contact-form .form-footer ul{display:-webkit-box;display:-ms-flexbox;display:flex;gap:67px}.contact-form .form-footer .copypast{margin:71px 0;color:var(--theme);font-size:20px}.contact-form .form-footer ul{gap:10px;color:var(--theme);font-size:20px}.straight{background:var(--theme);display:inline-block;width:2px}.discount{position:absolute;top:5%;right:10%}.leftGirl,.rightGirl{position:absolute;height:900px}.leftGirl{top:9%;left:-3.5%}.rightGirl{top:16%;right:3%}@supports (-webkit-appearance:none){.main{background-image:url(../img/mainBg.webp) no-repeat}.contact-form{background-image:url(../img/contactBg.webp) no-repeat}}@media (max-width:1200px){html{font-size:.65vw}}@media (max-width:992px){html{font-size:.7vw}}@media (max-width:768px){html{font-size:.8vw}.container{padding:0 17px}.footer-text{font-size:18px}.footer-btn{padding:6px 83px;white-space:nowrap}.footer-inner{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:normal;-ms-flex-align:normal;align-items:normal;padding:8px 0}.footer-boxes{display:none}.footer-exit{right:0;top:8px}.footer-white{color:var(--red)}.footer-red{color:#fff}}@media (max-width:576px){html{font-size:1vw}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4ubWluLmNzcyIsImdsb2JhbC9fcmVzZXQuc2NzcyIsIm1haW4uY3NzIiwiZ2xvYmFsL192YXJzLnNjc3MiLCJtYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0JBLEMsQ0FDQSxJLENBQ0EsTyxDQUNBLE8sQ0FmQSxNLENBeURBLE8sQ0FDQSxLLENBaUJBLEssQ0F4Q0EsQyxDQW5CQSxHLENBTkEsVSxDQWJBLEksQ0E4REEsTSxDQVRBLE8sQ0FaQSxNLENBckJBLEksQ0FDQSxJLENBdUJBLEUsQ0F0QkEsRyxDQXlDQSxPLENBeENBLEcsQ0F0QkEsRyxDQXlDQSxFLENBQ0EsRSxDQW5CQSxFLENBd0NBLEssQ0FoQkEsUSxDQWtCQSxVLENBREEsTSxDQUVBLE0sQ0FsQkEsSSxDQTNDQSxFLENBQ0EsRSxDQUNBLEUsQ0FDQSxFLENBQ0EsRSxDQUNBLEUsQ0F5REEsTSxDQUNBLE0sQ0NyRUEsSSxDRHdDQSxDLENBbkNBLE0sQ0FvQkEsRyxDQUNBLEcsQ0FDQSxHLENBdUJBLEssQ0FDQSxNLENBSkEsRSxDQThCQSxJLENBUEEsSSxDQUNBLEcsQ0FuRUEsTSxDQXlDQSxFLENBMkJBLE0sQ0E1REEsQyxDQUVBLEcsQ0FjQSxDLENBNkNBLEksQ0E1Q0EsQyxDQUNBLEksQ0E0Q0EsTyxDQTNDQSxLLENBN0JBLEksQ0E4QkEsTSxDQUNBLE0sQ0FDQSxHLENBeUNBLE8sQ0F4Q0EsRyxDQWlCQSxLLENBRUEsSyxDQUtBLEUsQ0FKQSxLLENBR0EsRSxDQUZBLEssQ0FvQkEsSSxDQW5CQSxFLENBckJBLEUsQ0FHQSxDLENBT0EsRSxDQVRBLEcsQ0EwQ0EsSyxDQ0VJLFEsQ0FDQSxTLENBQ0EsUSxDQUVBLFksQ0FDQSx1QixDRElKLE8sQ0FDQSxLLENBQ0EsTyxDQUNBLFUsQ0FDQSxNLENBQ0EsTSxDQUNBLE0sQ0FDQSxNLENBNkNBLEcsQ0E1Q0EsSSxDQUNBLEcsQ0FDQSxPLENFQ0EsYSxDRkdBLEksQ0VDQSxhLENDMUJJLHNCLENBRUEsa0IsQ0gyQkosRSxDQUNBLEUsQ0VDQSxlLENGR0EsVSxDQUNBLEMsQ0VDQSxXLENGSUEsZ0IsQ0FEQSxpQixDRU9BLE8sQ0ZEQSxRLENBSEUsWSxDRVNGLEssQ0ZDRSx3QixDQ1dGLGdCLENEUEEsQyxDQUNBLE8sQ0VBQSxRLENGRUUsNkIsQ0NVRixxQixDRE5BLEcsQ0VDQSxjLENGRUUsVyxDQ1VGLFUsQ0FFSSxJLENBRkosYyxDQ0hBLEMsQ0RRSSxvQixDREhKLFdFQUEsc0IsQ0RNSSwrRCxDQVJKLGlCLENETUUsZ0IsQUNLRSxXQVhKLDZCLENEV0Usc0QsQ0VBQSxpQixDQUNGLGdCRklBLEUsQ0VBQSxjLENGSUEsRSxDRzlLSSxjLENEaUxKLEUsQ0M1S0EsYyxDSGlMQSxFLENHN0tJLGdCLENIaUxKLEUsQ0VBQSxnQixDRklBLEUsQ0VBQSxnQixDRklBLFUsQ0VBQSxnQixDRkVFLGUsQ0dySkYsYSxDSHlKQSxLLENHdEpBLGUsQ0FDSSxjLENEdUpKLGUsQ0ZFRSxpQixDR3ZKRixnQyxDQUNJLGtDLENEd0pKLHFDLENGRUUsZSxDR3ZKRixlLENBQ0ksYSxDQUNBLGUsQ0FDQSw2QixDRHdKSixtQixDRkVFLDRCLENHdkpGLGEsQ0FDSSxjLENBQ0EsaUIsQ0FDQSxpQixDQUNBLFMsQ0FDQSxTLENBQ0EsUyxDQUNBLFcsQ0FFQSxXLENBQ0EsVyxDSCtKSixPLENHbEpJLHVCLENIc0pKLGEsQ0dqSkksbUIsQ0FDQSxtQixDQUNBLFksQ0RrSkosd0IsQ0ZFRSxxQixDSTlPRiw2QixDQUNFLHdCLENBQ0EscUIsQ0FDQSxrQixDQUdGLFUsQ0FHSSxRLENKbVBKLGEsQ0kvT0UsUSxDQUNFLGtCLENKeVBKLEssQ0VSQSwyQyxDRXpQQSxVLENKc1BBLGEsQ0FlQSxVLENJMVBNLG1CLENBQ0EsbUIsQ0o0UEosWSxDQWxCRixhLENBZUEsVSxDQUlFLHdCLENJNVBJLHFCLENBQ0Esa0IsQ0p1UE4sVSxDRU5BLFEsQ0ZjRSxZLENFVkYsa0IsQ0U5T0UsNkIsQ0FDRSw2QixDQUFBLDhCLENBQUEsMEIsQ0ppUUosYSxDSS9QSSxtQixDQUNBLG1CLENGZ1BKLFksQ0UvT0ksVyxDQUNFLDJCLENBQUEsNEIsQ0ptUUoseUIsQ0FDQSxxQixDRW5CRixRLENFOU9FLGtCLENBQ0UsdUIsQ0pzUUosZSxDSXBRSSxjLENKcVJKLE8sQ0FiQSxTLENJM1BJLHVCLENKMlBKLFMsQ0l0UUksb0IsQ0FDQSxlLENGZ1BKLGtCLENFL09JLHlCLENBQ0Usc0IsQ0ZpUE4saUIsQ0U5T0UsYyxDQUNFLGtCLENBQ0Esa0IsQ0oyUUosTyxDSXhRSSxjLENBQ0EsUSxDQUNBLFUsQ0o2UUosYSxDSXhRQSxtQixDQUNFLG1CLENBQ0EsWSxDQUNBLHdCLENBQ0EscUIsQ0YrT0YsNkIsQ0U5T0UsWSxDQUNFLHdCLENBQUEscUIsQ0FBQSxrQixDQUNBLGlCLENKK1FKLFksQ0k3UUksK0IsQ0orUUYsVSxDRTlCRixXLENFOU9FLGdCLENKbVJGLGEsQ0kvUUksaUIsQ0ZnUEosVSxDQUdBLFcsQ0U5T0UsZSxDQUNFLGtCLENBQ0Esa0IsQ0ZnUEosVSxDRTlPRSxjLENKbVJGLFksQ0kvUUksaUIsQ0FHRixhLENBQ0Usd0QsQ0ZnUEoscUIsQ0ZvQ0Esc0IsQ0k5UUUsYSxDQUNBLGUsQ0YrT0YsaUIsQ0U5T0UsYyxDQUNFLGtCLENKbVJKLDJCLENJL1FJLGtCLENKbVJKLHdCLENFaENBLG1CLENFOU9FLG1CLENBQ0UsWSxDQUFBLDJCLENBQUEsNEIsQ0FDQSx5QixDQUFBLHFCLENKb1JGLHdCLENBQ0EscUIsQ0lwUkUsa0IsQ0pzUkYsaUIsQ0VyQ0YsZ0IsQ0U5T0Usa0IsQ0FDRSxrQixDQUNBLGMsQ0FHRixtQixDQUNFLHVCLENBQ0EsOEMsQ0p3UkYsc0MsQ0l2UkUsa0IsQ0FDQSxrQixDSjJSSixzQixDSXhSTSxpQixDQUNBLGtCLENGaVBOLDhDLENGNENBLHdCLENJMVJNLG1CLENBQ0EsbUIsQ0FBQSxZLENKNlJKLDJCLENBQ0EsNEIsQ0k3UkkseUIsQ0FDQSxxQixDQUNBLGtCLENGaVBOLGMsQ0VoUE0sa0IsQ0prU04sOEIsQ0FDRSxRLENJL1JNLFMsQ0FDQSwrRCxDRmtQUix1RCxDRTlPTSxZLENBQ0UsVyxDRmtQUiw0QixDRTdPSSxZLENBQ0UsWSxDQUNBLGlCLENKZ1NOLHVCLENJNVJNLGUsQ0FDQSxvQixDQUNBLGdCLENGK09OLGMsQ0U3T0ksd0IsQ0FDRSxrQixDQUFBLGtCLENBQUEsa0IsQ0prU04sMEIsQ0FDRSxtQixDSWpTSSxtQixDSm1TSixZLENBQ0EsMkIsQ0VyREYsNEIsQ0U5T00seUIsQ0FDRSxxQixDQUFBLHdCLENBQUEscUIsQ0FDQSxrQixDSjBTUixtQyxDSXpSQSw2QixDQWJRLG1CLENBQ0EsbUIsQ0ZnUFIsWSxDRTlPTSxRLENKMFNOLG9DLENJeFNRLGEsQ0FDQSxrQixDQUNBLGMsQ0FNUiw2QixDRmdQQSxRLENGMkRFLGtCLENJclNGLGMsQ0p5U0EsUyxDRXpEQSx1QixDRjJERSxvQixDSXJTRixTLENKeVNBLFMsQ0lyU0UsaUIsQ0Y2T0YsTSxDRjJERSxTLENBR0YsUyxDQU9BLFUsQ0V6REUsaUIsQ0YyREEsWSxDQVRGLFMsQ0V2REEsTSxDRjJERSxVLENBR0YsVSxDSW5TSSxPLENKdVNGLFEsQ0FHRixXSXRTTSx1QixFSnVTSixLLENFekRBLGtELENGNkRBLGEsQ0FDRSx1RCxBQUlKLDBCQUNFLEksQ0U5REEsaUIsQUZ1RUYseUJBQ0UsSSxDRTlEQSxnQixBQVFGLHlCRmdFRSxJLENFOURELGMsQ0ZrRUMsVSxDRTlERixjLENGa0VFLFksQ0U5REQsYyxDRmtFQyxXLENFOURGLGdCLENGZ0VJLGtCLENFNURILGEsQ0ZnRUcsMkIsQ0U5REosNEIsQ0ZnRUkseUIsQ0U5REoscUIsQ0ZnRUksd0IsQ0U5REoscUIsQ0ZnRUksa0IsQ0U5REgsYSxDRmtFQyxhLENFOURGLFksQ0ZrRUUsWSxDQUNFLE8sQ0FDQSxPLENBR0YsYSxDQUNFLGdCLENBR0YsVyxDQUNFLFksQUFRSix5QkFDRSxJLENBQ0UsZSIsImZpbGUiOiJtYWluLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJodG1sLFxuYm9keSxcbmRpdixcbnNwYW4sXG5hcHBsZXQsXG5vYmplY3QsXG5pZnJhbWUsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxuYmxvY2txdW90ZSxcbnByZSxcbmEsXG5hYmJyLFxuYWNyb255bSxcbmFkZHJlc3MsXG5iaWcsXG5jaXRlLFxuY29kZSxcbmRlbCxcbmRmbixcbmVtLFxuaW1nLFxuaW5zLFxua2JkLFxucSxcbnMsXG5zYW1wLFxuc21hbGwsXG5zdHJpa2UsXG5zdHJvbmcsXG5zdWIsXG5zdXAsXG50dCxcbnZhcixcbmIsXG51LFxuaSxcbmNlbnRlcixcbmRsLFxuZHQsXG5kZCxcbm9sLFxudWwsXG5saSxcbmZpZWxkc2V0LFxuZm9ybSxcbmxhYmVsLFxubGVnZW5kLFxudGFibGUsXG5jYXB0aW9uLFxudGJvZHksXG50Zm9vdCxcbnRoZWFkLFxudHIsXG50aCxcbnRkLFxuYXJ0aWNsZSxcbmFzaWRlLFxuY2FudmFzLFxuZGV0YWlscyxcbmVtYmVkLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5vdXRwdXQsXG5ydWJ5LFxuc2VjdGlvbixcbnN1bW1hcnksXG50aW1lLFxubWFyayxcbmF1ZGlvLFxudmlkZW8ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLFxucSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cblxuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxucTpiZWZvcmUsXG5xOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuKixcbio6OmFmdGVyLFxuKjo6YmVmb3JlIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5pbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiBhdXRvO1xufVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAwLjZ2dztcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkhpcmFnaW5vXCI7XG4gIHNyYzogdXJsKFwiLi9mb250L0hpcmFnaW5vIE1pbmNobyBQcm8gVzYub3RmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJUaW1lcyBOZXcgUm9tYW5cIjtcbiAgc3JjOiB1cmwoXCIuL2ZvbnQvdGltZXMtbmV3LXJvbWFuLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogNjRweDtcbn1cblxuaDIge1xuICBmb250LXNpemU6IDQ4cHg7XG59XG5cbmgzIHtcbiAgZm9udC1zaXplOiAzcmVtO1xufVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMi40cmVtO1xufVxuXG5oNSB7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xufVxuXG5oNiB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxOTIwcHg7XG4gIHBhZGRpbmc6IDAgMTcwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG46cm9vdCB7XG4gIC0tdGhlbWU6ICNlZTc2OWE7XG4gIC0tZGFyazogI2U4NDk3OTtcbiAgLS1saWdodDogI2Y0YTNiYjtcbiAgLS12LWxpZ2h0OiAjZmZmZWZlO1xuICAtLWZvY3VzOiByZ2JhKDIzOCwgMTE4LCAxNTQsIDAuMyk7XG4gIC0tb3BhY2l0eTogcmdiYSgyMzgsIDExOCwgMTU0LCAwLjEpO1xuICAtLXYtb3BhY2l0eTogcmdiYSgyMzgsIDExOCwgMTU0LCAwLjA1KTtcbiAgLS1ibGFjazogIzNmM2YzZjtcbiAgLS13aGl0ZTogI2VlZWVlZTtcbiAgLS1yZWQ6ICNmZjAwNGM7XG4gIC0tZm9udDogSGlyYWdpbm87XG4gIC0tc2Vjb25kLWZvbnQ6IFRpbWVzIE5ldyBSb21hbjtcbiAgLS10aGlyZC1mb250OiBSb2JvdG87XG4gIC0tc2QtdHJhbnM6IGFsbCAwLjJzIGVhc2Utb3V0O1xuICAtLWgtaGVhZDogOHJlbTtcbiAgLS1oLWZvb3Q6IDE2cmVtO1xuICAtLWZ6LWljb24tbGc6IDJyZW07XG4gIC0tZnotaWNvbi1zbTogNHJlbTtcbiAgLS1oMTogNjRweDtcbiAgLS1oMjogNDhweDtcbiAgLS1oMzogM3JlbTtcbiAgLS1oNDogMi40cmVtO1xuICAtLWg1OiAxLjhyZW07XG4gIC0taDY6IDEuMnJlbTtcbn1cblxuYm9keSB7XG4gIGZvbnQ6IDEuNnJlbSBcIkhpcmFnaW5vXCI7XG4gIGJhY2tncm91bmQ6ICNmMWYxZjE7XG59XG5cbi5oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS10aGVtZSk7XG59XG5cbi5oZWFkZXItaW5uZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmhlYWRlciB1bCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAyMHB4O1xufVxuXG4uaGVhZGVyIHVsIGxpIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDEwcHg7XG4gIGNvbG9yOiB2YXIoLS13aGl0ZSk7XG59XG5cbi5tYWluIHtcbiAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9tYWluQmcucG5nKSBuby1yZXBlYXQ7XG59XG5cbi5tYWluLWl0ZW0ge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMjBweDtcbiAgaGVpZ2h0OiA5MDBweDtcbn1cblxuLm1haW4taXRlbS1yZXZlcnNlIHtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiBob3Jpem9udGFsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IHJldmVyc2U7XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbn1cblxuLm1haW4tYXJ0aWNsZSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDg0MHB4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogMjBweDtcbiAgY29sb3I6IHZhcigtLWJsYWNrKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQpO1xufVxuXG4ubWFpbi1hcnRpY2xlIHAge1xuICBmb250LXNpemU6IDMycHg7XG59XG5cbi5tYWluLWJ0biB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXRoZW1lKTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiA0MHB4O1xuICBjb2xvcjogdmFyKC0tYmxhY2spO1xuICB3aWR0aDogLXdlYmtpdC1maXQtY29udGVudDtcbiAgd2lkdGg6IC1tb3otZml0LWNvbnRlbnQ7XG4gIHdpZHRoOiBmaXQtY29udGVudDtcbiAgZm9udC1zaXplOiAzMnB4O1xuICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICBwYWRkaW5nOiA0OHB4IDE2OHB4O1xufVxuXG4uZm9vdGVyIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tdGhlbWUpO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5mb290ZXItaW5uZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgaGVpZ2h0OiAxMzBweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uZm9vdGVyLXRleHQge1xuICBmb250OiA2MDAgMjRweCB2YXIoLS10aGlyZC1mb250KTtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG5cbi5mb290ZXItcmVkIHtcbiAgY29sb3I6IHZhcigtLXJlZCk7XG59XG5cbi5mb290ZXItYm94ZXMge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvdHRvbTogMzAlO1xufVxuXG4uZm9vdGVyLWJ0biB7XG4gIGJhY2tncm91bmQ6ICMwMDAwMDA7XG4gIHBhZGRpbmc6IDE2cHggMTI0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBmb250LXNpemU6IDI0cHg7XG59XG5cbi5mb290ZXItZXhpdCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cblxuLmNvbnRhY3QtZm9ybSB7XG4gIGJhY2tncm91bmQ6IHVybCguLi9pbWcvY29udGFjdEJnLnBuZykgbm8tcmVwZWF0IHJpZ2h0IHRvcDtcbiAgcGFkZGluZzogMTUwcHggMCAyNTBweDtcbn1cblxuLmNvbnRhY3QtZm9ybSAuY3Vyc2l2ZSB7XG4gIGNvbG9yOiAjM2EzYTNhO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogNDhweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmNvbnRhY3QtZm9ybSAuY3Vyc2l2ZSBzcGFuIHtcbiAgY29sb3I6IHZhcigtLXRoZW1lKTtcbn1cblxuLmNvbnRhY3QtZm9ybSAuY29udGFpbmVyIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmNvbnRhY3QtZm9ybSBoMSB7XG4gIGNvbG9yOiB2YXIoLS1ibGFjayk7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG4gIGZvbnQtc2l6ZTogNjRweDtcbn1cblxuLmNvbnRhY3QtZm9ybSAuZm9ybSB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXRoZW1lKTtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwcHggMHB4IDMzcHggMjRweCAjYmI2NzgwO1xuICBib3gtc2hhZG93OiBpbnNldCAwcHggMHB4IDMzcHggMjRweCAjYmI2NzgwO1xuICBwYWRkaW5nOiA1MHB4IDEyMHB4O1xuICBib3JkZXItcmFkaXVzOiA1NnB4O1xufVxuXG4uY29udGFjdC1mb3JtIC5mb3JtIGgyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogdmFyKC0tYmxhY2spO1xuICB0ZXh0LXNoYWRvdzogLTJweCAxcHggMnB4IHJnYmEoMjM5LCAyMzksIDIzOSwgMC43OSk7XG59XG5cbi5jb250YWN0LWZvcm0gLmZvcm0taXRlbSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBjb2xvcjogdmFyKC0tYmxhY2spO1xuICBmb250LXNpemU6IDI2cHg7XG4gIG1hcmdpbi1ib3R0b206IDcwcHg7XG59XG5cbi5jb250YWN0LWZvcm0gLmZvcm0taXRlbSBpbnB1dCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAzLjMxcHggMy4zMXB4IDMuMzFweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gIGJveC1zaGFkb3c6IGluc2V0IDMuMzFweCAzLjMxcHggMy4zMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTtcbiAgd2lkdGg6IDEwNThweDtcbiAgaGVpZ2h0OiA3NXB4O1xufVxuXG4uY29udGFjdC1mb3JtIC5mb3JtLWxvZ28gaW1nIHtcbiAgd2lkdGg6IDEyMzBweDtcbiAgaGVpZ2h0OiA2OTNweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY29udGFjdC1mb3JtIC5mb3JtLWJ0biB7XG4gIGJhY2tncm91bmQ6ICMwMDAwMDA7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXRvcDogMTQwcHg7XG4gIGZvbnQtc2l6ZTogMjZweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6IHZhcigtLXdoaXRlKTtcbiAgYm9yZGVyLXJhZGl1czogNjBweDtcbiAgcGFkZGluZzogMjZweCA0MjBweDtcbn1cblxuLmNvbnRhY3QtZm9ybSAuZm9ybS1mb290ZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmNvbnRhY3QtZm9ybSAuZm9ybS1mb290ZXIgLnNvY2lhbHMge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGdhcDogNjdweDtcbn1cblxuLmNvbnRhY3QtZm9ybSAuZm9ybS1mb290ZXIgLmNvcHlwYXN0IHtcbiAgbWFyZ2luOiA3MXB4IDA7XG4gIGNvbG9yOiB2YXIoLS10aGVtZSk7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmNvbnRhY3QtZm9ybSAuZm9ybS1mb290ZXIgdWwge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGdhcDogMTBweDtcbiAgY29sb3I6IHZhcigtLXRoZW1lKTtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uc3RyYWlnaHQge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS10aGVtZSk7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDJweDtcbn1cblxuLmRpc2NvdW50IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUlO1xuICByaWdodDogMTAlO1xufVxuXG4ubGVmdEdpcmwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogOTAwcHg7XG4gIHRvcDogOSU7XG4gIGxlZnQ6IC0zLjUlO1xufVxuXG4ucmlnaHRHaXJsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDkwMHB4O1xuICB0b3A6IDE2JTtcbiAgcmlnaHQ6IDMlO1xufVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG4gIC5tYWluIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL21haW5CZy53ZWJwKSBuby1yZXBlYXQ7XG4gIH1cblxuICAuY29udGFjdC1mb3JtIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2NvbnRhY3RCZy53ZWJwKSBuby1yZXBlYXQ7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICBodG1sIHtcbiAgICBmb250LXNpemU6IDAuNjV2dztcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIGh0bWwge1xuICAgIGZvbnQtc2l6ZTogMC43dnc7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICBodG1sIHtcbiAgICBmb250LXNpemU6IDAuOHZ3O1xuICB9XG5cbiAgLmNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMCAxN3B4O1xuICB9XG5cbiAgLmZvb3Rlci10ZXh0IHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gIH1cblxuICAuZm9vdGVyLWJ0biB7XG4gICAgcGFkZGluZzogNnB4IDgzcHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgfVxuXG4gIC5mb290ZXItaW5uZXIge1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogbm9ybWFsO1xuICAgIC1tcy1mbGV4LWFsaWduOiBub3JtYWw7XG4gICAgYWxpZ24taXRlbXM6IG5vcm1hbDtcbiAgICBwYWRkaW5nOiA4cHggMDtcbiAgfVxuXG4gIC5mb290ZXItYm94ZXMge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAuZm9vdGVyLWV4aXQge1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogOHB4O1xuICB9XG5cbiAgLmZvb3Rlci13aGl0ZSB7XG4gICAgY29sb3I6IHZhcigtLXJlZCk7XG4gIH1cblxuICAuZm9vdGVyLXJlZCB7XG4gICAgY29sb3I6ICNmZmZmZmY7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICBodG1sIHtcbiAgICBmb250LXNpemU6IDF2dztcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn1cclxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1kc2IySmhiQzlmY21WelpYUXVjMk56Y3lJc0ltMWhhVzR1WTNOeklpd2laMnh2WW1Gc0wxOTJZWEp6TG5OamMzTWlMQ0p0WVdsdUxuTmpjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUTBFN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3p0RlFXbEdTU3hUUVVGQk8wVkJRMEVzVlVGQlFUdEZRVU5CTEZOQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc1lVRkJRVHRGUVVOQkxIZENRVUZCTzBGRFFVbzdPMEZFUjBFc1owUkJRVUU3UVVGRlFUczdPenM3T3pzN096czdSVUZYU1N4alFVRkJPMEZEUkVvN08wRkVTVUU3UlVGRFNTeGpRVUZCTzBGRFJFbzdPMEZFU1VFN08wVkJSVWtzWjBKQlFVRTdRVU5FU2pzN1FVUkpRVHM3UlVGRlNTeFpRVUZCTzBGRFJFbzdPMEZFUzBrN1JVRkZTU3hYUVVGQk8wVkJRMEVzWVVGQlFUdEJRMGhTT3p0QlJGRkpPMFZCUlVrc1YwRkJRVHRGUVVOQkxHRkJRVUU3UVVOT1VqczdRVVJWUVR0RlFVTkpMSGxDUVVGQk8wVkJRMEVzYVVKQlFVRTdRVU5RU2pzN1FVUlpRVHM3TzBWQlIwa3NPRUpCUVVFN1ZVRkJRU3h6UWtGQlFUdEJRMVJLT3p0QlJGbEJPMFZCUTBrc1kwRkJRVHRGUVVOQkxHVkJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNWMEZCUVR0QlExUktPenRCUkZsQk8wVkJRMGtzWjBKQlFVRTdRVU5VU2p0QlJGVkpPMFZCUmtvN1NVRkhVU3hwUWtGQlFUdEZRMUJPTzBGQlEwWTdRVVJSU1R0RlFVeEtPMGxCVFZFc1owSkJRVUU3UlVOTVRqdEJRVU5HTzBGRVRVazdSVUZTU2p0SlFWTlJMR2RDUVVGQk8wVkRTRTQ3UVVGRFJqdEJSRWxKTzBWQldFbzdTVUZaVVN4alFVRkJPMFZEUkU0N1FVRkRSanM3UVVSSlFUdEZRVU5KTEhGQ1FVRkJPMEZEUkVvN08wRkROVXRCTzBWQlEwa3NkVUpCUVVFN1JVRkRRU3huUlVGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc2JVSkJRVUU3UVVRclMwbzdRVU0xUzBFN1JVRkRTU3c0UWtGQlFUdEZRVU5CTEhsRVFVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeHRRa0ZCUVR0QlJEaExTanRCUTJwS1FUdEZRVU5KTEdWQlZrTTdRVVEyU2t3N08wRkRha3BCTzBWQlEwa3NaVUZhUXp0QlJHZExURHM3UVVOc1NrRTdSVUZEU1N4bFFXUkRPMEZFYlV0TU96dEJRMjVLUVR0RlFVTkpMR2xDUVdoQ1F6dEJSSE5MVERzN1FVTndTa0U3UlVGRFNTeHBRa0ZzUWtNN1FVUjVTMHc3TzBGRGNrcEJPMFZCUTBrc2FVSkJjRUpETzBGRU5FdE1PenRCUTNKS1FUdEZRVU5KTEdsQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeGpRVUZCTzBGRWQwcEtPenRCUTNKS1FUdEZRVU5KTEdkQ1FVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hwUTBGQlFUdEZRVU5CTEcxRFFVRkJPMFZCUTBFc2MwTkJRVUU3UlVGRlFTeG5Ra0ZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzWTBGQlFUdEZRVVZCTEdkQ1FVRkJPMFZCUTBFc09FSkJRVUU3UlVGRFFTeHZRa0ZCUVR0RlFVVkJMRFpDUVVGQk8wVkJSVUVzWTBGQlFUdEZRVU5CTEdWQlFVRTdSVUZGUVN4clFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlJVRXNWVUZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3hWUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4WlFVRkJPMEZFYTBwS096dEJSVFZQUVR0RlFVTkZMSGxDUVVGQk8wVkJRMEVzZFVKRVQwczdSVU5PVEN4cFFrRkJRVHRCUml0UFJqczdRVVUxVDBFN1JVRkRSU3gzUWtGQlFUdEJSaXRQUmp0QlJUbFBSVHRGUVVORkxHOUNRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkJRU3hoUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN4elFrRkJRVHRWUVVGQkxEaENRVUZCTzBWQlEwRXNlVUpCUVVFN1RVRkJRU3h6UWtGQlFUdFZRVUZCTEcxQ1FVRkJPMEZHWjFCS08wRkZPVTlGTzBWQlEwVXNiMEpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVUZCTEdGQlFVRTdSVUZEUVN4VFFVRkJPMEZHWjFCS08wRkZMMDlKTzBWQlEwVXNiMEpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVUZCTEdGQlFVRTdSVUZEUVN4NVFrRkJRVHROUVVGQkxITkNRVUZCTzFWQlFVRXNiVUpCUVVFN1JVRkRRU3hUUVVGQk8wVkJRMEVzYlVKQlFVRTdRVVpwVUU0N08wRkZOVTlCTzBWQlEwVXNhMFJCUVVFN1FVWXJUMFk3UVVVNVQwVTdSVUZEUlN4dlFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlFVRXNZVUZCUVR0RlFVTkJMSGxDUVVGQk8wMUJRVUVzYzBKQlFVRTdWVUZCUVN4dFFrRkJRVHRGUVVOQkxGTkJRVUU3UlVGRFFTeGhRVUZCTzBGR1oxQktPMEZGTDA5Sk8wVkJRMFVzT0VKQlFVRTdSVUZCUVN3NFFrRkJRVHROUVVGQkxDdENRVUZCTzFWQlFVRXNNa0pCUVVFN1FVWnBVRTQ3UVVVNVQwVTdSVUZEUlN4dlFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlFVRXNZVUZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3cwUWtGQlFUdEZRVUZCTERaQ1FVRkJPMDFCUVVFc01FSkJRVUU3VlVGQlFTeHpRa0ZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEhkQ1FVRkJPMEZHWjFCS08wRkZMMDlKTzBWQlEwVXNaVUZCUVR0QlJtbFFUanRCUlRsUFJUdEZRVU5GTEhGQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTdzRRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzTUVKQlFVRTdSVUZCUVN4MVFrRkJRVHRGUVVGQkxHdENRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzYlVKQlFVRTdRVVpuVUVvN08wRkZOVTlCTzBWQlEwVXNaVUZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzT0VKQlFVRTdRVVlyVDBZN1FVVTVUMFU3UlVGRFJTeHZRa0ZCUVR0RlFVRkJMRzlDUVVGQk8wVkJRVUVzWVVGQlFUdEZRVU5CTEhsQ1FVRkJPMDFCUVVFc2MwSkJRVUU3VlVGQlFTdzRRa0ZCUVR0RlFVTkJMR0ZCUVVFN1JVRkRRU3g1UWtGQlFUdE5RVUZCTEhOQ1FVRkJPMVZCUVVFc2JVSkJRVUU3UlVGRFFTeHJRa0ZCUVR0QlJtZFFTanRCUlRsUFJUdEZRVU5GTERoQ1FVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNZMEZCUVR0QlJtZFFTanRCUlRsUFJUdEZRVU5GTEdsQ1FVRkJPMEZHWjFCS08wRkZPVTlGTzBWQlEwVXNhMEpCUVVFN1JVRkRRU3hYUVVGQk8wRkdaMUJLTzBGRk9VOUZPMFZCUTBVc2JVSkJRVUU3UlVGRFFTeDVRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEdWQlFVRTdRVVpuVUVvN1FVVTVUMFU3UlVGRFJTeHJRa0ZCUVR0QlJtZFFTanM3UVVVMVQwRTdSVUZEUlN4eFJFRkJRVHRGUVVOQkxEaENRVUZCTzBWQlEwRXNjMEpCUVVFN1FVWXJUMFk3UVVVNVQwVTdSVUZEUlN4alFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3h0UWtGQlFUdEJSbWRRU2p0QlJTOVBTVHRGUVVORkxHMUNRVUZCTzBGR2FWQk9PMEZGT1U5Rk8wVkJRMFVzYjBKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVGQkxHRkJRVUU3UlVGRFFTdzBRa0ZCUVR0RlFVRkJMRFpDUVVGQk8wMUJRVUVzTUVKQlFVRTdWVUZCUVN4elFrRkJRVHRGUVVOQkxIbENRVUZCTzAxQlFVRXNjMEpCUVVFN1ZVRkJRU3h0UWtGQlFUdEZRVU5CTEd0Q1FVRkJPMEZHWjFCS08wRkZPVTlGTzBWQlEwVXNiVUpCUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEdWQlFVRTdRVVpuVUVvN1FVVTVUMFU3UlVGRFJTdzRRa0ZCUVR0RlFVTkJMRzFFUVVGQk8xVkJRVUVzTWtOQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHMUNRVUZCTzBGR1oxQktPMEZGTDA5Sk8wVkJRMFVzYTBKQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHMUVRVUZCTzBGR2FWQk9PMEZGTDA5Sk8wVkJRMFVzYjBKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVGQkxHRkJRVUU3UlVGRFFTdzBRa0ZCUVR0RlFVRkJMRFpDUVVGQk8wMUJRVUVzTUVKQlFVRTdWVUZCUVN4elFrRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMRzFDUVVGQk8wRkdhVkJPTzBGRmFGQk5PMFZCUTBVc1dVRkJRVHRGUVVOQkxHRkJRVUU3UlVGRFFTeHZSVUZCUVR0VlFVRkJMRFJFUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEZsQlFVRTdRVVpyVUZJN1FVVTVUMDA3UlVGRFJTeGhRVUZCTzBWQlEwRXNZVUZCUVR0RlFVTkJMR3RDUVVGQk8wRkdaMUJTTzBGRk4wOUpPMFZCUTBVc2NVSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3g1UWtGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMSGxDUVVGQk8wRkdLMDlPTzBGRk4wOUpPMFZCUTBVc2IwSkJRVUU3UlVGQlFTeHZRa0ZCUVR0RlFVRkJMR0ZCUVVFN1JVRkRRU3cwUWtGQlFUdEZRVUZCTERaQ1FVRkJPMDFCUVVFc01FSkJRVUU3VlVGQlFTeHpRa0ZCUVR0RlFVTkJMSGxDUVVGQk8wMUJRVUVzYzBKQlFVRTdWVUZCUVN4dFFrRkJRVHRCUml0UFRqdEJSVGxQVFR0RlFVTkZMRzlDUVVGQk8wVkJRVUVzYjBKQlFVRTdSVUZCUVN4aFFVRkJPMFZCUTBFc1UwRkJRVHRCUm1kUVVqdEJSVGxQVFR0RlFVTkZMR05CUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEdWQlFVRTdRVVpuVUZJN1FVVTVUMDA3UlVGRFJTeHZRa0ZCUVR0RlFVRkJMRzlDUVVGQk8wVkJRVUVzWVVGQlFUdEZRVU5CTEZOQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHVkJRVUU3UVVablVGSTdPMEZGTVU5Qk8wVkJRMFVzY1VKQlFVRTdSVUZEUVN4VlFVRkJPMFZCUTBFc09FSkJRVUU3UVVZMlQwWTdPMEZGTVU5Qk8wVkJRMFVzYTBKQlFVRTdSVUZEUVN4UFFVRkJPMFZCUTBFc1ZVRkJRVHRCUmpaUFJqczdRVVV4VDBFN1JVRkRSU3hyUWtGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4UFFVRkJPMFZCUTBFc1YwRkJRVHRCUmpaUFJqczdRVVV4VDBFN1JVRkRSU3hyUWtGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4UlFVRkJPMFZCUTBFc1UwRkJRVHRCUmpaUFJqczdRVVV4VDBFN1JVRkRSVHRKUVVORkxHVkJRVUU3UlVZMlQwWTdPMFZGTVU5Rk8wbEJRMFVzWlVGQlFUdEZSalpQU2p0RlJUTlBSVHRKUVVORkxHbENRVUZCTzBsQlEwRXNiVUpCUVVFN1JVWTJUMG83UlVVelQwVTdTVUZEUlN3MFFrRkJRVHRKUVVGQkxEWkNRVUZCTzFGQlFVRXNNRUpCUVVFN1dVRkJRU3h6UWtGQlFUdEpRVU5CTEhsQ1FVRkJPMUZCUVVFc2MwSkJRVUU3V1VGQlFTeHRRa0ZCUVR0SlFVTkJMR05CUVVFN1JVWTJUMG83UlVVelQwVTdTVUZEUlN4aFFVRkJPMFZHTms5S08wVkZNMDlGTzBsQlEwVXNVVUZCUVR0SlFVTkJMRkZCUVVFN1JVWTJUMG83UlVVelQwVTdTVUZEUlN4cFFrRkJRVHRGUmpaUFNqdEZSVE5QUlR0SlFVTkZMR05CUVVFN1JVWTJUMG83UVVGRFJqdEJRVU5CTzBGQlEwRXNUVUZCVFN4clJFRkJhMFE3UVVGRGVFUXNZMEZCWXl4eFJFRkJjVVE3UVVGRGJrVTdPME5CUlVNN08wRkJSVVE3TzBGQlJVRTdPMEZCUlVFN08wTkJSVU03TzBGQlJVUTdPMEZCUlVFN08wRkJSVUU3TzBOQlJVTTdPMEZCUlVRN08wRkJSVUU3TzBGQlJVRTdPME5CUlVNN08wRkJSVVE3TzBGQlJVRTdPMEZCUlVFaUxDSm1hV3hsSWpvaWJXRnBiaTVqYzNNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZMeUJTWlhObGRGeHlYRzVvZEcxc0xGeHlYRzVpYjJSNUxGeHlYRzVrYVhZc1hISmNibk53WVc0c1hISmNibUZ3Y0d4bGRDeGNjbHh1YjJKcVpXTjBMRnh5WEc1cFpuSmhiV1VzWEhKY2JtZ3hMRnh5WEc1b01peGNjbHh1YURNc1hISmNibWcwTEZ4eVhHNW9OU3hjY2x4dWFEWXNYSEpjYm5Bc1hISmNibUpzYjJOcmNYVnZkR1VzWEhKY2JuQnlaU3hjY2x4dVlTeGNjbHh1WVdKaWNpeGNjbHh1WVdOeWIyNTViU3hjY2x4dVlXUmtjbVZ6Y3l4Y2NseHVZbWxuTEZ4eVhHNWphWFJsTEZ4eVhHNWpiMlJsTEZ4eVhHNWtaV3dzWEhKY2JtUm1iaXhjY2x4dVpXMHNYSEpjYm1sdFp5eGNjbHh1YVc1ekxGeHlYRzVyWW1Rc1hISmNibkVzWEhKY2JuTXNYSEpjYm5OaGJYQXNYSEpjYm5OdFlXeHNMRnh5WEc1emRISnBhMlVzWEhKY2JuTjBjbTl1Wnl4Y2NseHVjM1ZpTEZ4eVhHNXpkWEFzWEhKY2JuUjBMRnh5WEc1MllYSXNYSEpjYm1Jc1hISmNiblVzWEhKY2Jta3NYSEpjYm1ObGJuUmxjaXhjY2x4dVpHd3NYSEpjYm1SMExGeHlYRzVrWkN4Y2NseHViMndzWEhKY2JuVnNMRnh5WEc1c2FTeGNjbHh1Wm1sbGJHUnpaWFFzWEhKY2JtWnZjbTBzWEhKY2JteGhZbVZzTEZ4eVhHNXNaV2RsYm1Rc1hISmNiblJoWW14bExGeHlYRzVqWVhCMGFXOXVMRnh5WEc1MFltOWtlU3hjY2x4dWRHWnZiM1FzWEhKY2JuUm9aV0ZrTEZ4eVhHNTBjaXhjY2x4dWRHZ3NYSEpjYm5Sa0xGeHlYRzVoY25ScFkyeGxMRnh5WEc1aGMybGtaU3hjY2x4dVkyRnVkbUZ6TEZ4eVhHNWtaWFJoYVd4ekxGeHlYRzVsYldKbFpDeGNjbHh1Wm1sbmRYSmxMRnh5WEc1bWFXZGpZWEIwYVc5dUxGeHlYRzVtYjI5MFpYSXNYSEpjYm1obFlXUmxjaXhjY2x4dWFHZHliM1Z3TEZ4eVhHNXRaVzUxTEZ4eVhHNXVZWFlzWEhKY2JtOTFkSEIxZEN4Y2NseHVjblZpZVN4Y2NseHVjMlZqZEdsdmJpeGNjbHh1YzNWdGJXRnllU3hjY2x4dWRHbHRaU3hjY2x4dWJXRnlheXhjY2x4dVlYVmthVzhzWEhKY2JuWnBaR1Z2SUh0Y2NseHVJQ0FnSUcxaGNtZHBiam9nTUR0Y2NseHVJQ0FnSUhCaFpHUnBibWM2SURBN1hISmNiaUFnSUNCaWIzSmtaWEk2SURBN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXdNQ1U3WEhKY2JpQWdJQ0JtYjI1ME9pQnBibWhsY21sME8xeHlYRzRnSUNBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUdKaGMyVnNhVzVsTzF4eVhHNTlYSEpjYmx4eVhHNHZLaUJJVkUxTU5TQmthWE53YkdGNUxYSnZiR1VnY21WelpYUWdabTl5SUc5c1pHVnlJR0p5YjNkelpYSnpJQ292WEhKY2JseHlYRzVoY25ScFkyeGxMRnh5WEc1aGMybGtaU3hjY2x4dVpHVjBZV2xzY3l4Y2NseHVabWxuWTJGd2RHbHZiaXhjY2x4dVptbG5kWEpsTEZ4eVhHNW1iMjkwWlhJc1hISmNibWhsWVdSbGNpeGNjbHh1YUdkeWIzVndMRnh5WEc1dFpXNTFMRnh5WEc1dVlYWXNYSEpjYm5ObFkzUnBiMjRnZTF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYSEpjYm4xY2NseHVYSEpjYm1KdlpIa2dlMXh5WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFN1hISmNibjFjY2x4dVhISmNibTlzTEZ4eVhHNTFiQ0I3WEhKY2JpQWdJQ0JzYVhOMExYTjBlV3hsT2lCdWIyNWxPMXh5WEc1OVhISmNibHh5WEc1aWJHOWphM0YxYjNSbExGeHlYRzV4SUh0Y2NseHVJQ0FnSUhGMWIzUmxjem9nYm05dVpUdGNjbHh1ZlZ4eVhHNWNjbHh1WW14dlkydHhkVzkwWlNCN1hISmNiaUFnSUNBbU9tSmxabTl5WlN4Y2NseHVJQ0FnSUNZNllXWjBaWElnZTF4eVhHNGdJQ0FnSUNBZ0lHTnZiblJsYm5RNklGd2lYQ0k3WEhKY2JpQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ2JtOXVaVHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dWNTQjdYSEpjYmlBZ0lDQW1PbUpsWm05eVpTeGNjbHh1SUNBZ0lDWTZZV1owWlhJZ2UxeHlYRzRnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hISmNiaUFnSUNBZ0lDQWdZMjl1ZEdWdWREb2dibTl1WlR0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVkR0ZpYkdVZ2UxeHlYRzRnSUNBZ1ltOXlaR1Z5TFdOdmJHeGhjSE5sT2lCamIyeHNZWEJ6WlR0Y2NseHVJQ0FnSUdKdmNtUmxjaTF6Y0dGamFXNW5PaUF3TzF4eVhHNTlYSEpjYmx4eVhHNHZMeUJOZVNCemRIbHNaWE5jY2x4dVhISmNiaW9zWEhKY2JpbzZPbUZtZEdWeUxGeHlYRzRxT2pwaVpXWnZjbVVnZTF4eVhHNGdJQ0FnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNjbHh1ZlZ4eVhHNWNjbHh1YVcxbklIdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4eVhHNGdJQ0FnYldGNExYZHBaSFJvT2lBeE1EQWxPMXh5WEc0Z0lDQWdhR1ZwWjJoME9pQmhkWFJ2TzF4eVhHNGdJQ0FnZDJsa2RHZzZJR0YxZEc4N1hISmNibjFjY2x4dVhISmNibWgwYld3Z2UxeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXdMaloyZHp0Y2NseHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBeE1qQXdjSGdwSUh0Y2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREF1TmpWMmR6dGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTVPVEp3ZUNrZ2UxeHlYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTUM0M2RuYzdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dOelk0Y0hncElIdGNjbHh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURBdU9IWjNPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRFUzTm5CNEtTQjdYSEpjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeGRuYzdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYm1FZ2UxeHlYRzRnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh5WEc1OVhISmNiaUlzSW1oMGJXd3NYRzVpYjJSNUxGeHVaR2wyTEZ4dWMzQmhiaXhjYm1Gd2NHeGxkQ3hjYm05aWFtVmpkQ3hjYm1sbWNtRnRaU3hjYm1neExGeHVhRElzWEc1b015eGNibWcwTEZ4dWFEVXNYRzVvTml4Y2JuQXNYRzVpYkc5amEzRjFiM1JsTEZ4dWNISmxMRnh1WVN4Y2JtRmlZbklzWEc1aFkzSnZibmx0TEZ4dVlXUmtjbVZ6Y3l4Y2JtSnBaeXhjYm1OcGRHVXNYRzVqYjJSbExGeHVaR1ZzTEZ4dVpHWnVMRnh1Wlcwc1hHNXBiV2NzWEc1cGJuTXNYRzVyWW1Rc1hHNXhMRnh1Y3l4Y2JuTmhiWEFzWEc1emJXRnNiQ3hjYm5OMGNtbHJaU3hjYm5OMGNtOXVaeXhjYm5OMVlpeGNibk4xY0N4Y2JuUjBMRnh1ZG1GeUxGeHVZaXhjYm5Vc1hHNXBMRnh1WTJWdWRHVnlMRnh1Wkd3c1hHNWtkQ3hjYm1Sa0xGeHViMndzWEc1MWJDeGNibXhwTEZ4dVptbGxiR1J6WlhRc1hHNW1iM0p0TEZ4dWJHRmlaV3dzWEc1c1pXZGxibVFzWEc1MFlXSnNaU3hjYm1OaGNIUnBiMjRzWEc1MFltOWtlU3hjYm5SbWIyOTBMRnh1ZEdobFlXUXNYRzUwY2l4Y2JuUm9MRnh1ZEdRc1hHNWhjblJwWTJ4bExGeHVZWE5wWkdVc1hHNWpZVzUyWVhNc1hHNWtaWFJoYVd4ekxGeHVaVzFpWldRc1hHNW1hV2QxY21Vc1hHNW1hV2RqWVhCMGFXOXVMRnh1Wm05dmRHVnlMRnh1YUdWaFpHVnlMRnh1YUdkeWIzVndMRnh1YldWdWRTeGNibTVoZGl4Y2JtOTFkSEIxZEN4Y2JuSjFZbmtzWEc1elpXTjBhVzl1TEZ4dWMzVnRiV0Z5ZVN4Y2JuUnBiV1VzWEc1dFlYSnJMRnh1WVhWa2FXOHNYRzUyYVdSbGJ5QjdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ1ltOXlaR1Z5T2lBd08xeHVJQ0JtYjI1MExYTnBlbVU2SURFd01DVTdYRzRnSUdadmJuUTZJR2x1YUdWeWFYUTdYRzRnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJpWVhObGJHbHVaVHRjYm4xY2JseHVMeW9nU0ZSTlREVWdaR2x6Y0d4aGVTMXliMnhsSUhKbGMyVjBJR1p2Y2lCdmJHUmxjaUJpY205M2MyVnljeUFxTDF4dVlYSjBhV05zWlN4Y2JtRnphV1JsTEZ4dVpHVjBZV2xzY3l4Y2JtWnBaMk5oY0hScGIyNHNYRzVtYVdkMWNtVXNYRzVtYjI5MFpYSXNYRzVvWldGa1pYSXNYRzVvWjNKdmRYQXNYRzV0Wlc1MUxGeHVibUYyTEZ4dWMyVmpkR2x2YmlCN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVmVnh1WEc1aWIyUjVJSHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREU3WEc1OVhHNWNibTlzTEZ4dWRXd2dlMXh1SUNCc2FYTjBMWE4wZVd4bE9pQnViMjVsTzF4dWZWeHVYRzVpYkc5amEzRjFiM1JsTEZ4dWNTQjdYRzRnSUhGMWIzUmxjem9nYm05dVpUdGNibjFjYmx4dVlteHZZMnR4ZFc5MFpUcGlaV1p2Y21Vc0lHSnNiMk5yY1hWdmRHVTZZV1owWlhJZ2UxeHVJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHVJQ0JqYjI1MFpXNTBPaUJ1YjI1bE8xeHVmVnh1WEc1eE9tSmxabTl5WlN3Z2NUcGhablJsY2lCN1hHNGdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJR052Ym5SbGJuUTZJRzV2Ym1VN1hHNTlYRzVjYm5SaFlteGxJSHRjYmlBZ1ltOXlaR1Z5TFdOdmJHeGhjSE5sT2lCamIyeHNZWEJ6WlR0Y2JpQWdZbTl5WkdWeUxYTndZV05wYm1jNklEQTdYRzU5WEc1Y2Jpb3NYRzRxT2pwaFpuUmxjaXhjYmlvNk9tSmxabTl5WlNCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hHNTlYRzVjYm1sdFp5QjdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCdFlYZ3RkMmxrZEdnNklERXdNQ1U3WEc0Z0lHaGxhV2RvZERvZ1lYVjBienRjYmlBZ2QybGtkR2c2SUdGMWRHODdYRzU5WEc1Y2JtaDBiV3dnZTF4dUlDQm1iMjUwTFhOcGVtVTZJREF1Tm5aM08xeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURFeU1EQndlQ2tnZTF4dUlDQm9kRzFzSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURBdU5qVjJkenRjYmlBZ2ZWeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURrNU1uQjRLU0I3WEc0Z0lHaDBiV3dnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTUM0M2RuYzdYRzRnSUgxY2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEzTmpod2VDa2dlMXh1SUNCb2RHMXNJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREF1T0haM08xeHVJQ0I5WEc1OVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dOVGMyY0hncElIdGNiaUFnYUhSdGJDQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhkbmM3WEc0Z0lIMWNibjFjYmx4dVlTQjdYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNibjFjYmx4dVFHWnZiblF0Wm1GalpTQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJa2hwY21GbmFXNXZYQ0k3WEc0Z0lITnlZem9nZFhKc0tGd2lMaTltYjI1MEwwaHBjbUZuYVc1dklFMXBibU5vYnlCUWNtOGdWell1YjNSbVhDSXBJR1p2Y20xaGRDaGNJblJ5ZFdWMGVYQmxYQ0lwTzF4dUlDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYRzRnSUdadmJuUXRkMlZwWjJoME9pQnViM0p0WVd3N1hHNTlYRzVBWm05dWRDMW1ZV05sSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVZHbHRaWE1nVG1WM0lGSnZiV0Z1WENJN1hHNGdJSE55WXpvZ2RYSnNLRndpTGk5bWIyNTBMM1JwYldWekxXNWxkeTF5YjIxaGJpNTBkR1pjSWlrZ1ptOXliV0YwS0Z3aWRISjFaWFI1Y0dWY0lpazdYRzRnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SUc1dmNtMWhiRHRjYm4xY2JtZ3hJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQTJOSEI0TzF4dWZWeHVYRzVvTWlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTkRod2VEdGNibjFjYmx4dWFETWdlMXh1SUNCbWIyNTBMWE5wZW1VNklETnlaVzA3WEc1OVhHNWNibWcwSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF5TGpSeVpXMDdYRzU5WEc1Y2JtZzFJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhMamh5WlcwN1hHNTlYRzVjYm1nMklIdGNiaUFnWm05dWRDMXphWHBsT2lBeExqSnlaVzA3WEc1OVhHNWNiaTVqYjI1MFlXbHVaWElnZTF4dUlDQnRZWGd0ZDJsa2RHZzZJREU1TWpCd2VEdGNiaUFnY0dGa1pHbHVaem9nTUNBeE56QndlRHRjYmlBZ2JXRnlaMmx1T2lBd0lHRjFkRzg3WEc1OVhHNWNianB5YjI5MElIdGNiaUFnTFMxMGFHVnRaVG9nSTJWbE56WTVZVHRjYmlBZ0xTMWtZWEpyT2lBalpUZzBPVGM1TzF4dUlDQXRMV3hwWjJoME9pQWpaalJoTTJKaU8xeHVJQ0F0TFhZdGJHbG5hSFE2SUNObVptWmxabVU3WEc0Z0lDMHRabTlqZFhNNklISm5ZbUVvTWpNNExDQXhNVGdzSURFMU5Dd2dNQzR6S1R0Y2JpQWdMUzF2Y0dGamFYUjVPaUJ5WjJKaEtESXpPQ3dnTVRFNExDQXhOVFFzSURBdU1TazdYRzRnSUMwdGRpMXZjR0ZqYVhSNU9pQnlaMkpoS0RJek9Dd2dNVEU0TENBeE5UUXNJREF1TURVcE8xeHVJQ0F0TFdKc1lXTnJPaUFqTTJZelpqTm1PMXh1SUNBdExYZG9hWFJsT2lBalpXVmxaV1ZsTzF4dUlDQXRMWEpsWkRvZ0kyWm1NREEwWXp0Y2JpQWdMUzFtYjI1ME9pQklhWEpoWjJsdWJ6dGNiaUFnTFMxelpXTnZibVF0Wm05dWREb2dWR2x0WlhNZ1RtVjNJRkp2YldGdU8xeHVJQ0F0TFhSb2FYSmtMV1p2Ym5RNklGSnZZbTkwYnp0Y2JpQWdMUzF6WkMxMGNtRnVjem9nWVd4c0lEQXVNbk1nWldGelpTMXZkWFE3WEc0Z0lDMHRhQzFvWldGa09pQTRjbVZ0TzF4dUlDQXRMV2d0Wm05dmREb2dNVFp5WlcwN1hHNGdJQzB0Wm5vdGFXTnZiaTFzWnpvZ01uSmxiVHRjYmlBZ0xTMW1laTFwWTI5dUxYTnRPaUEwY21WdE8xeHVJQ0F0TFdneE9pQTJOSEI0TzF4dUlDQXRMV2d5T2lBME9IQjRPMXh1SUNBdExXZ3pPaUF6Y21WdE8xeHVJQ0F0TFdnME9pQXlMalJ5WlcwN1hHNGdJQzB0YURVNklERXVPSEpsYlR0Y2JpQWdMUzFvTmpvZ01TNHljbVZ0TzF4dWZWeHVYRzVpYjJSNUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJZeFpqRm1NVHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRndpU0dseVlXZHBibTljSWp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TGpaeVpXMDdYRzU5WEc1Y2JpNW9aV0ZrWlhJZ2UxeHVJQ0JpWVdOclozSnZkVzVrT2lCMllYSW9MUzEwYUdWdFpTazdYRzU5WEc0dWFHVmhaR1Z5TFdsdWJtVnlJSHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCemNHRmpaUzFpWlhSM1pXVnVPMXh1SUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVmVnh1TG1obFlXUmxjaUIxYkNCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR2RoY0RvZ01qQndlRHRjYm4xY2JpNW9aV0ZrWlhJZ2RXd2diR2tnZTF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNCbllYQTZJREV3Y0hnN1hHNGdJR052Ykc5eU9pQjJZWElvTFMxM2FHbDBaU2s3WEc1OVhHNWNiaTV0WVdsdUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tDNHVMMmx0Wnk5dFlXbHVRbWN1Y0c1bktTQnVieTF5WlhCbFlYUTdYRzU5WEc0dWJXRnBiaTFwZEdWdElIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdaMkZ3T2lBeU1IQjRPMXh1SUNCb1pXbG5hSFE2SURrd01IQjRPMXh1ZlZ4dUxtMWhhVzR0YVhSbGJTMXlaWFpsY25ObElIdGNiaUFnWm14bGVDMWthWEpsWTNScGIyNDZJSEp2ZHkxeVpYWmxjbk5sTzF4dWZWeHVMbTFoYVc0dFlYSjBhV05zWlNCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJSGRwWkhSb09pQTROREJ3ZUR0Y2JpQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JpQWdaMkZ3T2lBeU1IQjRPMXh1SUNCamIyeHZjam9nZG1GeUtDMHRZbXhoWTJzcE8xeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ2RtRnlLQzB0Wm05dWRDazdYRzU5WEc0dWJXRnBiaTFoY25ScFkyeGxJSEFnZTF4dUlDQm1iMjUwTFhOcGVtVTZJRE15Y0hnN1hHNTlYRzR1YldGcGJpMWlkRzRnZTF4dUlDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEc0Z0lHMWhjbWRwYmkxMGIzQTZJRFF3Y0hnN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExYUm9aVzFsS1R0Y2JpQWdZMjlzYjNJNklIWmhjaWd0TFdKc1lXTnJLVHRjYmlBZ2QybGtkR2c2SUdacGRDMWpiMjUwWlc1ME8xeHVJQ0JtYjI1MExYTnBlbVU2SURNeWNIZzdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRE13Y0hnN1hHNGdJSEJoWkdScGJtYzZJRFE0Y0hnZ01UWTRjSGc3WEc1OVhHNWNiaTVtYjI5MFpYSWdlMXh1SUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEc0Z0lHSnZkSFJ2YlRvZ01EdGNiaUFnZDJsa2RHZzZJREV3TUNVN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExYUm9aVzFsS1R0Y2JuMWNiaTVtYjI5MFpYSXRhVzV1WlhJZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJSE53WVdObExXSmxkSGRsWlc0N1hHNGdJR2hsYVdkb2REb2dNVE13Y0hnN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibjFjYmk1bWIyOTBaWEl0ZEdWNGRDQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQjJZWElvTFMxMGFHbHlaQzFtYjI1MEtUdGNiaUFnWm05dWRDMXphWHBsT2lBeU5IQjRPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOakF3TzF4dUlDQmpiMnh2Y2pvZ0kyWm1abVptWmp0Y2JuMWNiaTVtYjI5MFpYSXRjbVZrSUh0Y2JpQWdZMjlzYjNJNklIWmhjaWd0TFhKbFpDazdYRzU5WEc0dVptOXZkR1Z5TFdKdmVHVnpJSHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0JpYjNSMGIyMDZJRE13SlR0Y2JuMWNiaTVtYjI5MFpYSXRZblJ1SUh0Y2JpQWdjR0ZrWkdsdVp6b2dNVFp3ZUNBeE1qUndlRHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6QXdNREF3TUR0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01USndlRHRjYmlBZ1kyOXNiM0k2SUNObVptWm1abVk3WEc0Z0lHWnZiblF0YzJsNlpUb2dNalJ3ZUR0Y2JuMWNiaTVtYjI5MFpYSXRaWGhwZENCN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYm4xY2JseHVMbU52Ym5SaFkzUXRabTl5YlNCN1hHNGdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNndUxpOXBiV2N2WTI5dWRHRmpkRUpuTG5CdVp5a2dibTh0Y21Wd1pXRjBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQnlhV2RvZENCMGIzQTdYRzRnSUhCaFpHUnBibWM2SURFMU1IQjRJREFnTWpVd2NIZzdYRzU5WEc0dVkyOXVkR0ZqZEMxbWIzSnRJQzVqZFhKemFYWmxJSHRjYmlBZ1kyOXNiM0k2SUNNellUTmhNMkU3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEyTURBN1hHNGdJR1p2Ym5RdGMzUjViR1U2SUdsMFlXeHBZenRjYmlBZ1ptOXVkQzF6YVhwbE9pQTBPSEI0TzF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBeU1IQjRPMXh1ZlZ4dUxtTnZiblJoWTNRdFptOXliU0F1WTNWeWMybDJaU0J6Y0dGdUlIdGNiaUFnWTI5c2IzSTZJSFpoY2lndExYUm9aVzFsS1R0Y2JuMWNiaTVqYjI1MFlXTjBMV1p2Y20wZ0xtTnZiblJoYVc1bGNpQjdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYm4xY2JpNWpiMjUwWVdOMExXWnZjbTBnYURFZ2UxeHVJQ0JqYjJ4dmNqb2dkbUZ5S0MwdFlteGhZMnNwTzF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBME1IQjRPMXh1SUNCbWIyNTBMWE5wZW1VNklEWTBjSGc3WEc1OVhHNHVZMjl1ZEdGamRDMW1iM0p0SUM1bWIzSnRJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0ZEdobGJXVXBPMXh1SUNCaWIzZ3RjMmhoWkc5M09pQnBibk5sZENBd2NIZ2dNSEI0SURNemNIZ2dNalJ3ZUNBalltSTJOemd3TzF4dUlDQndZV1JrYVc1bk9pQTFNSEI0SURFeU1IQjRPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUExTm5CNE8xeHVmVnh1TG1OdmJuUmhZM1F0Wm05eWJTQXVabTl5YlNCb01pQjdYRzRnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdZMjlzYjNJNklIWmhjaWd0TFdKc1lXTnJLVHRjYmlBZ2RHVjRkQzF6YUdGa2IzYzZJQzB5Y0hnZ01YQjRJREp3ZUNCeVoySmhLREl6T1N3Z01qTTVMQ0F5TXprc0lEQXVOemtwTzF4dWZWeHVMbU52Ym5SaFkzUXRabTl5YlNBdVptOXliUzFwZEdWdElIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNiaUFnWTI5c2IzSTZJSFpoY2lndExXSnNZV05yS1R0Y2JpQWdabTl1ZEMxemFYcGxPaUF5Tm5CNE8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQTNNSEI0TzF4dWZWeHVMbU52Ym5SaFkzUXRabTl5YlNBdVptOXliUzFwZEdWdElHbHVjSFYwSUh0Y2JpQWdZbTl5WkdWeU9pQnViMjVsTzF4dUlDQnZkWFJzYVc1bE9pQnViMjVsTzF4dUlDQmliM2d0YzJoaFpHOTNPaUJwYm5ObGRDQXpMak14Y0hnZ015NHpNWEI0SURNdU16RndlQ0F3SUhKblltRW9NQ3dnTUN3Z01Dd2dNQzR5TlNrN1hHNGdJSGRwWkhSb09pQXhNRFU0Y0hnN1hHNGdJR2hsYVdkb2REb2dOelZ3ZUR0Y2JuMWNiaTVqYjI1MFlXTjBMV1p2Y20wZ0xtWnZjbTB0Ykc5bmJ5QnBiV2NnZTF4dUlDQjNhV1IwYURvZ01USXpNSEI0TzF4dUlDQm9aV2xuYUhRNklEWTVNM0I0TzF4dUlDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzU5WEc0dVkyOXVkR0ZqZEMxbWIzSnRJQzVtYjNKdExXSjBiaUI3WEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dNVFF3Y0hnN1hHNGdJR1p2Ym5RdGMybDZaVG9nTWpad2VEdGNiaUFnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjYmlBZ1kyOXNiM0k2SUhaaGNpZ3RMWGRvYVhSbEtUdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dOakJ3ZUR0Y2JpQWdjR0ZrWkdsdVp6b2dNalp3ZUNBME1qQndlRHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6QXdNREF3TUR0Y2JuMWNiaTVqYjI1MFlXTjBMV1p2Y20wZ0xtWnZjbTB0Wm05dmRHVnlJSHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ1pteGxlQzFrYVhKbFkzUnBiMjQ2SUdOdmJIVnRianRjYmlBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNibjFjYmk1amIyNTBZV04wTFdadmNtMGdMbVp2Y20wdFptOXZkR1Z5SUM1emIyTnBZV3h6SUh0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdaMkZ3T2lBMk4zQjRPMXh1ZlZ4dUxtTnZiblJoWTNRdFptOXliU0F1Wm05eWJTMW1iMjkwWlhJZ0xtTnZjSGx3WVhOMElIdGNiaUFnYldGeVoybHVPaUEzTVhCNElEQTdYRzRnSUdOdmJHOXlPaUIyWVhJb0xTMTBhR1Z0WlNrN1hHNGdJR1p2Ym5RdGMybDZaVG9nTWpCd2VEdGNibjFjYmk1amIyNTBZV04wTFdadmNtMGdMbVp2Y20wdFptOXZkR1Z5SUhWc0lIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWjJGd09pQXhNSEI0TzF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0ZEdobGJXVXBPMXh1SUNCbWIyNTBMWE5wZW1VNklESXdjSGc3WEc1OVhHNWNiaTV6ZEhKaGFXZG9kQ0I3WEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ2QybGtkR2c2SURKd2VEdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZG1GeUtDMHRkR2hsYldVcE8xeHVmVnh1WEc0dVpHbHpZMjkxYm5RZ2UxeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lIUnZjRG9nTlNVN1hHNGdJSEpwWjJoME9pQXhNQ1U3WEc1OVhHNWNiaTVzWldaMFIybHliQ0I3WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnYUdWcFoyaDBPaUE1TURCd2VEdGNiaUFnZEc5d09pQTVKVHRjYmlBZ2JHVm1kRG9nTFRNdU5TVTdYRzU5WEc1Y2JpNXlhV2RvZEVkcGNtd2dlMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJR2hsYVdkb2REb2dPVEF3Y0hnN1hHNGdJSFJ2Y0RvZ01UWWxPMXh1SUNCeWFXZG9kRG9nTXlVN1hHNTlYRzVjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBM05qaHdlQ2tnZTF4dUlDQXVZMjl1ZEdGcGJtVnlJSHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdJREUzY0hnN1hHNGdJSDFjYmx4dUlDQXVabTl2ZEdWeUxYUmxlSFFnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTVRod2VEdGNiaUFnZlZ4dUlDQXVabTl2ZEdWeUxXSjBiaUI3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dObkI0SURnemNIZzdYRzRnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNEdGNiaUFnZlZ4dUlDQXVabTl2ZEdWeUxXbHVibVZ5SUh0Y2JpQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQnViM0p0WVd3N1hHNGdJQ0FnY0dGa1pHbHVaem9nT0hCNElEQTdYRzRnSUgxY2JpQWdMbVp2YjNSbGNpMWliM2hsY3lCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnZlZ4dUlDQXVabTl2ZEdWeUxXVjRhWFFnZTF4dUlDQWdJSEpwWjJoME9pQXdPMXh1SUNBZ0lIUnZjRG9nT0hCNE8xeHVJQ0I5WEc0Z0lDNW1iMjkwWlhJdGQyaHBkR1VnZTF4dUlDQWdJR052Ykc5eU9pQjJZWElvTFMxeVpXUXBPMXh1SUNCOVhHNGdJQzVtYjI5MFpYSXRjbVZrSUh0Y2JpQWdJQ0JqYjJ4dmNqb2dJMlptWm1abVpqdGNiaUFnZlZ4dWZWeHVRSE4xY0hCdmNuUnpJQ2d0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2Ym05dVpTbDdYRzR1YldGcGJudGlZV05yWjNKdmRXNWtMV2x0WVdkbE9uVnliQ2d1TGk5cGJXY3ZiV0ZwYmtKbkxuZGxZbkFwSUc1dkxYSmxjR1ZoZEgxY2JpNWpiMjUwWVdOMExXWnZjbTE3WW1GamEyZHliM1Z1WkMxcGJXRm5aVHAxY213b0xpNHZhVzFuTDJOdmJuUmhZM1JDWnk1M1pXSndLU0J1YnkxeVpYQmxZWFI5WEc1OVhHNWNiaUJBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTVRJd01IQjRLWHRjYmx4dVFITjFjSEJ2Y25SeklDZ3RkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZibTl1WlNsN1hHNWNibjFjYmx4dWZWeHVYRzRnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURrNU1uQjRLWHRjYmx4dVFITjFjSEJ2Y25SeklDZ3RkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZibTl1WlNsN1hHNWNibjFjYmx4dWZWeHVYRzRnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURjMk9IQjRLWHRjYmx4dVFITjFjSEJ2Y25SeklDZ3RkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZibTl1WlNsN1hHNWNibjFjYmx4dWZWeHVYRzRnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURVM05uQjRLWHRjYmx4dVFITjFjSEJ2Y25SeklDZ3RkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZibTl1WlNsN1hHNWNibjFjYmx4dWZWeHVJaXdpUUdadmJuUXRabUZqWlNCN1hISmNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dYQ0pJYVhKaFoybHViMXdpTzF4eVhHNGdJQ0FnYzNKak9pQjFjbXdvWENJdUwyWnZiblF2U0dseVlXZHBibThnVFdsdVkyaHZJRkJ5YnlCWE5pNXZkR1pjSWlrZ1ptOXliV0YwS0Z3aWRISjFaWFI1Y0dWY0lpazdYSEpjYmlBZ0lDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYSEpjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nYm05eWJXRnNPMXh5WEc1OVhISmNibHh5WEc1QVptOXVkQzFtWVdObElIdGNjbHh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUJjSWxScGJXVnpJRTVsZHlCU2IyMWhibHdpTzF4eVhHNGdJQ0FnYzNKak9pQjFjbXdvWENJdUwyWnZiblF2ZEdsdFpYTXRibVYzTFhKdmJXRnVMblIwWmx3aUtTQm1iM0p0WVhRb1hDSjBjblZsZEhsd1pWd2lLVHRjY2x4dUlDQWdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjY2x4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCdWIzSnRZV3c3WEhKY2JuMWNjbHh1WEhKY2JpUm1iMjUwT2lCY0lraHBjbUZuYVc1dlhDSTdYSEpjYmlSbWIyNTBMWE5sWTI5dVpHRnllVG9nWENKVWFXMWxjeUJPWlhjZ1VtOXRZVzVjSWp0Y2NseHVKR1p2Ym5RdGRHaHBjbVI1T2lCY0lsSnZZbTkwYjF3aU8xeHlYRzVjY2x4dUpIUm9aVzFsT2lBalpXVTNOamxoTzF4eVhHNGtZbXhoWTJzNklDTXpaak5tTTJZN1hISmNiaVIzYUdsMFpUb2dJMlZsWldWbFpUdGNjbHh1SkhKbFpEb2dJMlptTURBMFl6dGNjbHh1WEhKY2JpUnpaQzEwY21GdWN6b2dZV3hzSURBdU1uTWdaV0Z6WlMxdmRYUTdYSEpjYmx4eVhHNGthQzFvWldGa09pQTRjbVZ0TzF4eVhHNGthQzFtYjI5ME9pQmpZV3hqS0NSb0xXaGxZV1FnS2lBeUtUdGNjbHh1WEhKY2JpUm1laTFwWTI5dUxXeG5PaUF5Y21WdE8xeHlYRzRrWm5vdGFXTnZiaTF6YlRvZ05ISmxiVHRjY2x4dVhISmNiaVJvTVRvZ05qUndlRHRjY2x4dUpHZ3lPaUEwT0hCNE8xeHlYRzRrYURNNklETnlaVzA3WEhKY2JpUm9ORG9nTWk0MGNtVnRPMXh5WEc0a2FEVTZJREV1T0hKbGJUdGNjbHh1SkdnMk9pQXhMakp5WlcwN1hISmNibHh5WEc0a1pub3RiRzluYnpvZ1kyRnNZeWdrYURFZ0tpQXhMalVwTzF4eVhHNWNjbHh1YURFZ2UxeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQWthREU3WEhKY2JuMWNjbHh1YURJZ2UxeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQWthREk3WEhKY2JuMWNjbHh1YURNZ2UxeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQWthRE03WEhKY2JuMWNjbHh1YURRZ2UxeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQWthRFE3WEhKY2JuMWNjbHh1YURVZ2UxeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQWthRFU3WEhKY2JuMWNjbHh1YURZZ2UxeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQWthRFk3WEhKY2JuMWNjbHh1WEhKY2JpNWpiMjUwWVdsdVpYSWdlMXh5WEc0Z0lDQWdiV0Y0TFhkcFpIUm9PaUF4T1RJd2NIZzdYSEpjYmlBZ0lDQndZV1JrYVc1bk9pQXdJREUzTUhCNE8xeHlYRzRnSUNBZ2JXRnlaMmx1T2lBd0lHRjFkRzg3WEhKY2JuMWNjbHh1WEhKY2JqcHliMjkwSUh0Y2NseHVJQ0FnSUMwdGRHaGxiV1U2SUNON0pIUm9aVzFsZlR0Y2NseHVJQ0FnSUMwdFpHRnlhem9nSTN0a1lYSnJaVzRvSkhSb1pXMWxMQ0F4TUNVcGZUdGNjbHh1SUNBZ0lDMHRiR2xuYUhRNklDTjdiR2xuYUhSbGJpZ2tkR2hsYldVc0lERXdKU2w5TzF4eVhHNGdJQ0FnTFMxMkxXeHBaMmgwT2lBamUyeHBaMmgwWlc0b0pIUm9aVzFsTENBek1DVXBmVHRjY2x4dUlDQWdJQzB0Wm05amRYTTZJQ043ZEhKaGJuTndZWEpsYm5ScGVtVW9KSFJvWlcxbExDQXdMamNwZlR0Y2NseHVJQ0FnSUMwdGIzQmhZMmwwZVRvZ0kzdDBjbUZ1YzNCaGNtVnVkR2w2WlNna2RHaGxiV1VzSURBdU9TbDlPMXh5WEc0Z0lDQWdMUzEyTFc5d1lXTnBkSGs2SUNON2RISmhibk53WVhKbGJuUnBlbVVvSkhSb1pXMWxMQ0F3TGprMUtYMDdYSEpjYmx4eVhHNGdJQ0FnTFMxaWJHRmphem9nSTNza1lteGhZMnQ5TzF4eVhHNGdJQ0FnTFMxM2FHbDBaVG9nSTNza2QyaHBkR1Y5TzF4eVhHNGdJQ0FnTFMxeVpXUTZJQ043SkhKbFpIMDdYSEpjYmx4eVhHNGdJQ0FnTFMxbWIyNTBPaUFqZXlSbWIyNTBmVHRjY2x4dUlDQWdJQzB0YzJWamIyNWtMV1p2Ym5RNklDTjdKR1p2Ym5RdGMyVmpiMjVrWVhKNWZUdGNjbHh1SUNBZ0lDMHRkR2hwY21RdFptOXVkRG9nSTNza1ptOXVkQzEwYUdseVpIbDlPMXh5WEc1Y2NseHVJQ0FnSUMwdGMyUXRkSEpoYm5NNklDTjdKSE5rTFhSeVlXNXpmVHRjY2x4dVhISmNiaUFnSUNBdExXZ3RhR1ZoWkRvZ0kzc2thQzFvWldGa2ZUdGNjbHh1SUNBZ0lDMHRhQzFtYjI5ME9pQWpleVJvTFdadmIzUjlPMXh5WEc1Y2NseHVJQ0FnSUMwdFpub3RhV052Ymkxc1p6b2dJM3NrWm5vdGFXTnZiaTFzWjMwN1hISmNiaUFnSUNBdExXWjZMV2xqYjI0dGMyMDZJQ043SkdaNkxXbGpiMjR0YzIxOU8xeHlYRzVjY2x4dUlDQWdJQzB0YURFNklDTjdKR2d4ZlR0Y2NseHVJQ0FnSUMwdGFESTZJQ043SkdneWZUdGNjbHh1SUNBZ0lDMHRhRE02SUNON0pHZ3pmVHRjY2x4dUlDQWdJQzB0YURRNklDTjdKR2cwZlR0Y2NseHVJQ0FnSUMwdGFEVTZJQ043SkdnMWZUdGNjbHh1SUNBZ0lDMHRhRFk2SUNON0pHZzJmVHRjY2x4dWZWeHlYRzRpTENKQWFXMXdiM0owSUZ3aVoyeHZZbUZzTDE5eVpYTmxkQzV6WTNOelhDSTdYRzVBYVcxd2IzSjBJRndpWjJ4dlltRnNMMTkyWVhKekxuTmpjM05jSWp0Y2NseHVMeTlBYVcxd2IzSjBJRndpY0d4MVoybHVjeThxTG5OamMzTmNJanRjY2x4dVhISmNibHh5WEc1aWIyUjVJSHRjY2x4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpaakZtTVdZeE8xeHlYRzRnSUdadmJuUXRabUZ0YVd4NU9pQWtabTl1ZER0Y2NseHVJQ0JtYjI1MExYTnBlbVU2SURFdU5uSmxiVHRjY2x4dWZWeHlYRzVjY2x4dUxtaGxZV1JsY2lCN1hISmNiaUFnWW1GamEyZHliM1Z1WkRvZ2RtRnlLQzB0ZEdobGJXVXBPMXh5WEc0Z0lDWXRhVzV1WlhJZ2UxeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2NseHVJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNiaUFnZlZ4eVhHNGdJSFZzSUh0Y2NseHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmlBZ0lDQm5ZWEE2SURJd2NIZzdYSEpjYmlBZ0lDQnNhU0I3WEhKY2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmlBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEhKY2JpQWdJQ0FnSUdkaGNEb2dNVEJ3ZUR0Y2NseHVJQ0FnSUNBZ1kyOXNiM0k2SUhaaGNpZ3RMWGRvYVhSbEtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNiaTV0WVdsdUlIdGNjbHh1SUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29MaTR2YVcxbkwyMWhhVzVDWnk1d2JtY3BJRzV2TFhKbGNHVmhkRHRjY2x4dUlDQW1MV2wwWlcwZ2UxeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEhKY2JpQWdJQ0JuWVhBNklESXdjSGc3WEhKY2JpQWdJQ0JvWldsbmFIUTZJRGt3TUhCNE8xeHlYRzRnSUNBZ0ppMXlaWFpsY25ObElIdGNjbHh1SUNBZ0lDQWdabXhsZUMxa2FYSmxZM1JwYjI0NklISnZkeTF5WlhabGNuTmxPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1SUNBbUxXRnlkR2xqYkdVZ2UxeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdJSGRwWkhSb09pQTROREJ3ZUR0Y2NseHVJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYSEpjYmlBZ0lDQm5ZWEE2SURJd2NIZzdYSEpjYmlBZ0lDQmpiMnh2Y2pvZ2RtRnlLQzB0WW14aFkyc3BPMXh5WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUhaaGNpZ3RMV1p2Ym5RcE8xeHlYRzRnSUNBZ2NDQjdYSEpjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTXpKd2VEdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNiaUFnSmkxaWRHNGdlMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4eVhHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ05EQndlRHRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExYUm9aVzFsS1R0Y2NseHVJQ0FnSUdOdmJHOXlPaUIyWVhJb0xTMWliR0ZqYXlrN1hISmNiaUFnSUNCM2FXUjBhRG9nWm1sMExXTnZiblJsYm5RN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklETXljSGc3WEhKY2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXpNSEI0TzF4eVhHNGdJQ0FnY0dGa1pHbHVaem9nTkRod2VDQXhOamh3ZUR0Y2NseHVJQ0I5WEhKY2JuMWNjbHh1WEhKY2JpNW1iMjkwWlhJZ2UxeHlYRzRnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjY2x4dUlDQmliM1IwYjIwNklEQTdYSEpjYmlBZ2QybGtkR2c2SURFd01DVTdYSEpjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0ZEdobGJXVXBPMXh5WEc0Z0lDWXRhVzV1WlhJZ2UxeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2NseHVJQ0FnSUdobGFXZG9kRG9nTVRNd2NIZzdYSEpjYmlBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh5WEc0Z0lIMWNjbHh1SUNBbUxYUmxlSFFnZTF4eVhHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklIWmhjaWd0TFhSb2FYSmtMV1p2Ym5RcE8xeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXlOSEI0TzF4eVhHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEWXdNRHRjY2x4dUlDQWdJR052Ykc5eU9pQWpabVptWm1abU8xeHlYRzRnSUgxY2NseHVJQ0FtTFhKbFpDQjdYSEpjYmlBZ0lDQmpiMnh2Y2pvZ2RtRnlLQzB0Y21Wa0tUdGNjbHh1SUNCOVhISmNiaUFnSmkxaWIzaGxjeUI3WEhKY2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JpQWdJQ0JpYjNSMGIyMDZJRE13SlR0Y2NseHVJQ0I5WEhKY2JpQWdKaTFpZEc0Z2UxeHlYRzRnSUNBZ2NHRmtaR2x1WnpvZ01UWndlQ0F4TWpSd2VEdGNjbHh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTXdNREF3TURBN1hISmNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF4TW5CNE8xeHlYRzRnSUNBZ1kyOXNiM0k2SUNObVptWm1abVk3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURJMGNIZzdYSEpjYmlBZ2ZWeHlYRzRnSUNZdFpYaHBkQ0I3WEhKY2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JpQWdmVnh5WEc1OVhISmNibHh5WEc0dVkyOXVkR0ZqZEMxbWIzSnRJSHRjY2x4dUlDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvTGk0dmFXMW5MMk52Ym5SaFkzUkNaeTV3Ym1jcElHNXZMWEpsY0dWaGREdGNjbHh1SUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQnlhV2RvZENCMGIzQTdYSEpjYmlBZ2NHRmtaR2x1WnpvZ01UVXdjSGdnTUNBeU5UQndlRHRjY2x4dUlDQXVZM1Z5YzJsMlpTQjdYSEpjYmlBZ0lDQmpiMnh2Y2pvZ0l6TmhNMkV6WVR0Y2NseHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTJNREE3WEhKY2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCcGRHRnNhV003WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURRNGNIZzdYSEpjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBeU1IQjRPMXh5WEc0Z0lDQWdjM0JoYmlCN1hISmNiaUFnSUNBZ0lHTnZiRzl5T2lCMllYSW9MUzEwYUdWdFpTazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ2ZWeHlYRzRnSUM1amIyNTBZV2x1WlhJZ2UxeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hISmNiaUFnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHlYRzRnSUgxY2NseHVJQ0JvTVNCN1hISmNiaUFnSUNCamIyeHZjam9nZG1GeUtDMHRZbXhoWTJzcE8xeHlYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTkRCd2VEdGNjbHh1SUNBZ0lHWnZiblF0YzJsNlpUb2dOalJ3ZUR0Y2NseHVJQ0I5WEhKY2JpQWdMbVp2Y20wZ2UxeHlYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0ZEdobGJXVXBPMXh5WEc0Z0lDQWdZbTk0TFhOb1lXUnZkem9nYVc1elpYUWdNSEI0SURCd2VDQXpNM0I0SURJMGNIZ2dJMkppTmpjNE1EdGNjbHh1SUNBZ0lIQmhaR1JwYm1jNklEVXdjSGdnTVRJd2NIZzdYSEpjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBMU5uQjRPMXh5WEc0Z0lDQWdhRElnZTF4eVhHNGdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNiaUFnSUNBZ0lHTnZiRzl5T2lCMllYSW9MUzFpYkdGamF5azdYSEpjYmlBZ0lDQWdJSFJsZUhRdGMyaGhaRzkzT2lBdE1uQjRJREZ3ZUNBeWNIZ2djbWRpWVNneU16a3NJREl6T1N3Z01qTTVMQ0F3TGpjNUtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDWXRhWFJsYlNCN1hISmNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JpQWdJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYSEpjYmlBZ0lDQWdJR052Ykc5eU9pQjJZWElvTFMxaWJHRmpheWs3WEhKY2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01qWndlRHRjY2x4dUlDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dOekJ3ZUR0Y2NseHVJQ0FnSUNBZ2FXNXdkWFFnZTF4eVhHNGdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ2JtOXVaVHRjY2x4dUlDQWdJQ0FnSUNCdmRYUnNhVzVsT2lCdWIyNWxPMXh5WEc0Z0lDQWdJQ0FnSUdKdmVDMXphR0ZrYjNjNklHbHVjMlYwSURNdU16RndlQ0F6TGpNeGNIZ2dNeTR6TVhCNElEQWdjbWRpWVNnd0xDQXdMQ0F3TENBd0xqSTFLVHRjY2x4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBMU9IQjRPMXh5WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nTnpWd2VEdGNjbHh1SUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdKaTFzYjJkdklIdGNjbHh1SUNBZ0lDQWdhVzFuSUh0Y2NseHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01USXpNSEI0TzF4eVhHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ05qa3pjSGc3WEhKY2JpQWdJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQW1MV0owYmlCN1hISmNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjY2x4dUlDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01UUXdjSGc3WEhKY2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01qWndlRHRjY2x4dUlDQWdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjY2x4dUlDQWdJQ0FnWTI5c2IzSTZJSFpoY2lndExYZG9hWFJsS1R0Y2NseHVJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTmpCd2VEdGNjbHh1SUNBZ0lDQWdjR0ZrWkdsdVp6b2dNalp3ZUNBME1qQndlRHRjY2x4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpBd01EQXdNRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQ1l0Wm05dmRHVnlJSHRjY2x4dUlDQWdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1SUNBZ0lDQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2NseHVJQ0FnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNjbHh1SUNBZ0lDQWdMbk52WTJsaGJITWdlMXh5WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmlBZ0lDQWdJQ0FnWjJGd09pQTJOM0I0TzF4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDNWpiM0I1Y0dGemRDQjdYSEpjYmlBZ0lDQWdJQ0FnYldGeVoybHVPaUEzTVhCNElEQTdYSEpjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJSFpoY2lndExYUm9aVzFsS1R0Y2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREl3Y0hnN1hISmNiaUFnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdkV3dnZTF4eVhHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JpQWdJQ0FnSUNBZ1oyRndPaUF4TUhCNE8xeHlYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQjJZWElvTFMxMGFHVnRaU2s3WEhKY2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXlNSEI0TzF4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNHVjM1J5WVdsbmFIUWdlMXh5WEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjY2x4dUlDQjNhV1IwYURvZ01uQjRPMXh5WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIWmhjaWd0TFhSb1pXMWxLVHRjY2x4dWZWeHlYRzVjY2x4dUxtUnBjMk52ZFc1MElIdGNjbHh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNiaUFnZEc5d09pQTFKVHRjY2x4dUlDQnlhV2RvZERvZ01UQWxPMXh5WEc1OVhISmNibHh5WEc0dWJHVm1kRWRwY213Z2UxeHlYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVJQ0JvWldsbmFIUTZJRGt3TUhCNE8xeHlYRzRnSUhSdmNEb2dPU1U3WEhKY2JpQWdiR1ZtZERvZ0xUTXVOU1U3WEhKY2JuMWNjbHh1WEhKY2JpNXlhV2RvZEVkcGNtd2dlMXh5WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNCb1pXbG5hSFE2SURrd01IQjRPMXh5WEc0Z0lIUnZjRG9nTVRZbE8xeHlYRzRnSUhKcFoyaDBPaUF6SlR0Y2NseHVmVnh5WEc1Y2NseHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRGMyT0hCNEtTQjdYSEpjYmlBZ0xtTnZiblJoYVc1bGNpQjdYSEpjYmlBZ0lDQndZV1JrYVc1bk9pQXdJREUzY0hnN1hISmNiaUFnZlZ4eVhHNGdJQzVtYjI5MFpYSWdlMXh5WEc0Z0lDQWdKaTEwWlhoMElIdGNjbHh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4T0hCNE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0ppMWlkRzRnZTF4eVhHNGdJQ0FnSUNCd1lXUmthVzVuT2lBMmNIZ2dPRE53ZUR0Y2NseHVJQ0FnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNEdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDWXRhVzV1WlhJZ2UxeHlYRzRnSUNBZ0lDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4eVhHNGdJQ0FnSUNCaGJHbG5iaTFwZEdWdGN6b2dibTl5YldGc08xeHlYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQTRjSGdnTUR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUNZdFltOTRaWE1nZTF4eVhHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdKaTFsZUdsMElIdGNjbHh1SUNBZ0lDQWdjbWxuYUhRNklEQTdYSEpjYmlBZ0lDQWdJSFJ2Y0RvZ09IQjRPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdKaTEzYUdsMFpTQjdYSEpjYmlBZ0lDQWdJR052Ykc5eU9pQjJZWElvTFMxeVpXUXBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdKaTF5WldRZ2UxeHlYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0kyWm1abVptWmp0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JuMWNjbHh1SWwxOSAqLyIsIi8vIFJlc2V0XHJcbmh0bWwsXHJcbmJvZHksXHJcbmRpdixcclxuc3BhbixcclxuYXBwbGV0LFxyXG5vYmplY3QsXHJcbmlmcmFtZSxcclxuaDEsXHJcbmgyLFxyXG5oMyxcclxuaDQsXHJcbmg1LFxyXG5oNixcclxucCxcclxuYmxvY2txdW90ZSxcclxucHJlLFxyXG5hLFxyXG5hYmJyLFxyXG5hY3JvbnltLFxyXG5hZGRyZXNzLFxyXG5iaWcsXHJcbmNpdGUsXHJcbmNvZGUsXHJcbmRlbCxcclxuZGZuLFxyXG5lbSxcclxuaW1nLFxyXG5pbnMsXHJcbmtiZCxcclxucSxcclxucyxcclxuc2FtcCxcclxuc21hbGwsXHJcbnN0cmlrZSxcclxuc3Ryb25nLFxyXG5zdWIsXHJcbnN1cCxcclxudHQsXHJcbnZhcixcclxuYixcclxudSxcclxuaSxcclxuY2VudGVyLFxyXG5kbCxcclxuZHQsXHJcbmRkLFxyXG5vbCxcclxudWwsXHJcbmxpLFxyXG5maWVsZHNldCxcclxuZm9ybSxcclxubGFiZWwsXHJcbmxlZ2VuZCxcclxudGFibGUsXHJcbmNhcHRpb24sXHJcbnRib2R5LFxyXG50Zm9vdCxcclxudGhlYWQsXHJcbnRyLFxyXG50aCxcclxudGQsXHJcbmFydGljbGUsXHJcbmFzaWRlLFxyXG5jYW52YXMsXHJcbmRldGFpbHMsXHJcbmVtYmVkLFxyXG5maWd1cmUsXHJcbmZpZ2NhcHRpb24sXHJcbmZvb3RlcixcclxuaGVhZGVyLFxyXG5oZ3JvdXAsXHJcbm1lbnUsXHJcbm5hdixcclxub3V0cHV0LFxyXG5ydWJ5LFxyXG5zZWN0aW9uLFxyXG5zdW1tYXJ5LFxyXG50aW1lLFxyXG5tYXJrLFxyXG5hdWRpbyxcclxudmlkZW8ge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIGZvbnQtc2l6ZTogMTAwJTtcclxuICAgIGZvbnQ6IGluaGVyaXQ7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cclxuXHJcbmFydGljbGUsXHJcbmFzaWRlLFxyXG5kZXRhaWxzLFxyXG5maWdjYXB0aW9uLFxyXG5maWd1cmUsXHJcbmZvb3RlcixcclxuaGVhZGVyLFxyXG5oZ3JvdXAsXHJcbm1lbnUsXHJcbm5hdixcclxuc2VjdGlvbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICBsaW5lLWhlaWdodDogMTtcclxufVxyXG5cclxub2wsXHJcbnVsIHtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbmJsb2NrcXVvdGUsXHJcbnEge1xyXG4gICAgcXVvdGVzOiBub25lO1xyXG59XHJcblxyXG5ibG9ja3F1b3RlIHtcclxuICAgICY6YmVmb3JlLFxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBjb250ZW50OiBub25lO1xyXG4gICAgfVxyXG59XHJcblxyXG5xIHtcclxuICAgICY6YmVmb3JlLFxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBjb250ZW50OiBub25lO1xyXG4gICAgfVxyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgYm9yZGVyLXNwYWNpbmc6IDA7XHJcbn1cclxuXHJcbi8vIE15IHN0eWxlc1xyXG5cclxuKixcclxuKjo6YWZ0ZXIsXHJcbio6OmJlZm9yZSB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5pbWcge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICB3aWR0aDogYXV0bztcclxufVxyXG5cclxuaHRtbCB7XHJcbiAgICBmb250LXNpemU6IDAuNnZ3O1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMC42NXZ3O1xyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAwLjd2dztcclxuICAgIH1cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMC44dnc7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDF2dztcclxuICAgIH1cclxufVxyXG5cclxuYSB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuIiwiaHRtbCxcbmJvZHksXG5kaXYsXG5zcGFuLFxuYXBwbGV0LFxub2JqZWN0LFxuaWZyYW1lLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucCxcbmJsb2NrcXVvdGUsXG5wcmUsXG5hLFxuYWJicixcbmFjcm9ueW0sXG5hZGRyZXNzLFxuYmlnLFxuY2l0ZSxcbmNvZGUsXG5kZWwsXG5kZm4sXG5lbSxcbmltZyxcbmlucyxcbmtiZCxcbnEsXG5zLFxuc2FtcCxcbnNtYWxsLFxuc3RyaWtlLFxuc3Ryb25nLFxuc3ViLFxuc3VwLFxudHQsXG52YXIsXG5iLFxudSxcbmksXG5jZW50ZXIsXG5kbCxcbmR0LFxuZGQsXG5vbCxcbnVsLFxubGksXG5maWVsZHNldCxcbmZvcm0sXG5sYWJlbCxcbmxlZ2VuZCxcbnRhYmxlLFxuY2FwdGlvbixcbnRib2R5LFxudGZvb3QsXG50aGVhZCxcbnRyLFxudGgsXG50ZCxcbmFydGljbGUsXG5hc2lkZSxcbmNhbnZhcyxcbmRldGFpbHMsXG5lbWJlZCxcbmZpZ3VyZSxcbmZpZ2NhcHRpb24sXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxub3V0cHV0LFxucnVieSxcbnNlY3Rpb24sXG5zdW1tYXJ5LFxudGltZSxcbm1hcmssXG5hdWRpbyxcbnZpZGVvIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udDogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxub2wsXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmJsb2NrcXVvdGUsXG5xIHtcbiAgcXVvdGVzOiBub25lO1xufVxuXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGNvbnRlbnQ6IG5vbmU7XG59XG5cbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuKixcbio6OmFmdGVyLFxuKjo6YmVmb3JlIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogYXV0bztcbn1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMC42dnc7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gIGh0bWwge1xuICAgIGZvbnQtc2l6ZTogMC42NXZ3O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAwLjd2dztcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIGh0bWwge1xuICAgIGZvbnQtc2l6ZTogMC44dnc7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICBodG1sIHtcbiAgICBmb250LXNpemU6IDF2dztcbiAgfVxufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiSGlyYWdpbm9cIjtcbiAgc3JjOiB1cmwoXCIuL2ZvbnQvSGlyYWdpbm8gTWluY2hvIFBybyBXNi5vdGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJUaW1lcyBOZXcgUm9tYW5cIjtcbiAgc3JjOiB1cmwoXCIuL2ZvbnQvdGltZXMtbmV3LXJvbWFuLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuaDEge1xuICBmb250LXNpemU6IDY0cHg7XG59XG5cbmgyIHtcbiAgZm9udC1zaXplOiA0OHB4O1xufVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbn1cblxuaDQge1xuICBmb250LXNpemU6IDIuNHJlbTtcbn1cblxuaDUge1xuICBmb250LXNpemU6IDEuOHJlbTtcbn1cblxuaDYge1xuICBmb250LXNpemU6IDEuMnJlbTtcbn1cblxuLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTkyMHB4O1xuICBwYWRkaW5nOiAwIDE3MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuOnJvb3Qge1xuICAtLXRoZW1lOiAjZWU3NjlhO1xuICAtLWRhcms6ICNlODQ5Nzk7XG4gIC0tbGlnaHQ6ICNmNGEzYmI7XG4gIC0tdi1saWdodDogI2ZmZmVmZTtcbiAgLS1mb2N1czogcmdiYSgyMzgsIDExOCwgMTU0LCAwLjMpO1xuICAtLW9wYWNpdHk6IHJnYmEoMjM4LCAxMTgsIDE1NCwgMC4xKTtcbiAgLS12LW9wYWNpdHk6IHJnYmEoMjM4LCAxMTgsIDE1NCwgMC4wNSk7XG4gIC0tYmxhY2s6ICMzZjNmM2Y7XG4gIC0td2hpdGU6ICNlZWVlZWU7XG4gIC0tcmVkOiAjZmYwMDRjO1xuICAtLWZvbnQ6IEhpcmFnaW5vO1xuICAtLXNlY29uZC1mb250OiBUaW1lcyBOZXcgUm9tYW47XG4gIC0tdGhpcmQtZm9udDogUm9ib3RvO1xuICAtLXNkLXRyYW5zOiBhbGwgMC4ycyBlYXNlLW91dDtcbiAgLS1oLWhlYWQ6IDhyZW07XG4gIC0taC1mb290OiAxNnJlbTtcbiAgLS1mei1pY29uLWxnOiAycmVtO1xuICAtLWZ6LWljb24tc206IDRyZW07XG4gIC0taDE6IDY0cHg7XG4gIC0taDI6IDQ4cHg7XG4gIC0taDM6IDNyZW07XG4gIC0taDQ6IDIuNHJlbTtcbiAgLS1oNTogMS44cmVtO1xuICAtLWg2OiAxLjJyZW07XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxO1xuICBmb250LWZhbWlseTogXCJIaXJhZ2lub1wiO1xuICBmb250LXNpemU6IDEuNnJlbTtcbn1cblxuLmhlYWRlciB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXRoZW1lKTtcbn1cbi5oZWFkZXItaW5uZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uaGVhZGVyIHVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAyMHB4O1xufVxuLmhlYWRlciB1bCBsaSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMTBweDtcbiAgY29sb3I6IHZhcigtLXdoaXRlKTtcbn1cblxuLm1haW4ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL21haW5CZy5wbmcpIG5vLXJlcGVhdDtcbn1cbi5tYWluLWl0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDIwcHg7XG4gIGhlaWdodDogOTAwcHg7XG59XG4ubWFpbi1pdGVtLXJldmVyc2Uge1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG59XG4ubWFpbi1hcnRpY2xlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDg0MHB4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDIwcHg7XG4gIGNvbG9yOiB2YXIoLS1ibGFjayk7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250KTtcbn1cbi5tYWluLWFydGljbGUgcCB7XG4gIGZvbnQtc2l6ZTogMzJweDtcbn1cbi5tYWluLWJ0biB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXRvcDogNDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUpO1xuICBjb2xvcjogdmFyKC0tYmxhY2spO1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIGZvbnQtc2l6ZTogMzJweDtcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgcGFkZGluZzogNDhweCAxNjhweDtcbn1cblxuLmZvb3RlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUpO1xufVxuLmZvb3Rlci1pbm5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgaGVpZ2h0OiAxMzBweDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmZvb3Rlci10ZXh0IHtcbiAgZm9udC1mYW1pbHk6IHZhcigtLXRoaXJkLWZvbnQpO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLmZvb3Rlci1yZWQge1xuICBjb2xvcjogdmFyKC0tcmVkKTtcbn1cbi5mb290ZXItYm94ZXMge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvdHRvbTogMzAlO1xufVxuLmZvb3Rlci1idG4ge1xuICBwYWRkaW5nOiAxNnB4IDEyNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwO1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgZm9udC1zaXplOiAyNHB4O1xufVxuLmZvb3Rlci1leGl0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuXG4uY29udGFjdC1mb3JtIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9jb250YWN0QmcucG5nKSBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IHRvcDtcbiAgcGFkZGluZzogMTUwcHggMCAyNTBweDtcbn1cbi5jb250YWN0LWZvcm0gLmN1cnNpdmUge1xuICBjb2xvcjogIzNhM2EzYTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXNpemU6IDQ4cHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG4uY29udGFjdC1mb3JtIC5jdXJzaXZlIHNwYW4ge1xuICBjb2xvcjogdmFyKC0tdGhlbWUpO1xufVxuLmNvbnRhY3QtZm9ybSAuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmNvbnRhY3QtZm9ybSBoMSB7XG4gIGNvbG9yOiB2YXIoLS1ibGFjayk7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG4gIGZvbnQtc2l6ZTogNjRweDtcbn1cbi5jb250YWN0LWZvcm0gLmZvcm0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZSk7XG4gIGJveC1zaGFkb3c6IGluc2V0IDBweCAwcHggMzNweCAyNHB4ICNiYjY3ODA7XG4gIHBhZGRpbmc6IDUwcHggMTIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDU2cHg7XG59XG4uY29udGFjdC1mb3JtIC5mb3JtIGgyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogdmFyKC0tYmxhY2spO1xuICB0ZXh0LXNoYWRvdzogLTJweCAxcHggMnB4IHJnYmEoMjM5LCAyMzksIDIzOSwgMC43OSk7XG59XG4uY29udGFjdC1mb3JtIC5mb3JtLWl0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBjb2xvcjogdmFyKC0tYmxhY2spO1xuICBmb250LXNpemU6IDI2cHg7XG4gIG1hcmdpbi1ib3R0b206IDcwcHg7XG59XG4uY29udGFjdC1mb3JtIC5mb3JtLWl0ZW0gaW5wdXQge1xuICBib3JkZXI6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJveC1zaGFkb3c6IGluc2V0IDMuMzFweCAzLjMxcHggMy4zMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTtcbiAgd2lkdGg6IDEwNThweDtcbiAgaGVpZ2h0OiA3NXB4O1xufVxuLmNvbnRhY3QtZm9ybSAuZm9ybS1sb2dvIGltZyB7XG4gIHdpZHRoOiAxMjMwcHg7XG4gIGhlaWdodDogNjkzcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5jb250YWN0LWZvcm0gLmZvcm0tYnRuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiAxNDBweDtcbiAgZm9udC1zaXplOiAyNnB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogdmFyKC0td2hpdGUpO1xuICBib3JkZXItcmFkaXVzOiA2MHB4O1xuICBwYWRkaW5nOiAyNnB4IDQyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwO1xufVxuLmNvbnRhY3QtZm9ybSAuZm9ybS1mb290ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmNvbnRhY3QtZm9ybSAuZm9ybS1mb290ZXIgLnNvY2lhbHMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDY3cHg7XG59XG4uY29udGFjdC1mb3JtIC5mb3JtLWZvb3RlciAuY29weXBhc3Qge1xuICBtYXJnaW46IDcxcHggMDtcbiAgY29sb3I6IHZhcigtLXRoZW1lKTtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuLmNvbnRhY3QtZm9ybSAuZm9ybS1mb290ZXIgdWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDEwcHg7XG4gIGNvbG9yOiB2YXIoLS10aGVtZSk7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLnN0cmFpZ2h0IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZSk7XG59XG5cbi5kaXNjb3VudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1JTtcbiAgcmlnaHQ6IDEwJTtcbn1cblxuLmxlZnRHaXJsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDkwMHB4O1xuICB0b3A6IDklO1xuICBsZWZ0OiAtMy41JTtcbn1cblxuLnJpZ2h0R2lybCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiA5MDBweDtcbiAgdG9wOiAxNiU7XG4gIHJpZ2h0OiAzJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDAgMTdweDtcbiAgfVxuXG4gIC5mb290ZXItdGV4dCB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICB9XG4gIC5mb290ZXItYnRuIHtcbiAgICBwYWRkaW5nOiA2cHggODNweDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB9XG4gIC5mb290ZXItaW5uZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IG5vcm1hbDtcbiAgICBwYWRkaW5nOiA4cHggMDtcbiAgfVxuICAuZm9vdGVyLWJveGVzIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5mb290ZXItZXhpdCB7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiA4cHg7XG4gIH1cbiAgLmZvb3Rlci13aGl0ZSB7XG4gICAgY29sb3I6IHZhcigtLXJlZCk7XG4gIH1cbiAgLmZvb3Rlci1yZWQge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICB9XG59XG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcbi5tYWlue2JhY2tncm91bmQtaW1hZ2U6dXJsKC4uL2ltZy9tYWluQmcud2VicCkgbm8tcmVwZWF0fVxuLmNvbnRhY3QtZm9ybXtiYWNrZ3JvdW5kLWltYWdlOnVybCguLi9pbWcvY29udGFjdEJnLndlYnApIG5vLXJlcGVhdH1cbn1cblxuIEBtZWRpYSAobWF4LXdpZHRoOiAxMjAwcHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgKG1heC13aWR0aDogOTkycHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG4iLCJAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIkhpcmFnaW5vXCI7XHJcbiAgICBzcmM6IHVybChcIi4vZm9udC9IaXJhZ2lubyBNaW5jaG8gUHJvIFc2Lm90ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6IFwiVGltZXMgTmV3IFJvbWFuXCI7XHJcbiAgICBzcmM6IHVybChcIi4vZm9udC90aW1lcy1uZXctcm9tYW4udHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxufVxyXG5cclxuJGZvbnQ6IFwiSGlyYWdpbm9cIjtcclxuJGZvbnQtc2Vjb25kYXJ5OiBcIlRpbWVzIE5ldyBSb21hblwiO1xyXG4kZm9udC10aGlyZHk6IFwiUm9ib3RvXCI7XHJcblxyXG4kdGhlbWU6ICNlZTc2OWE7XHJcbiRibGFjazogIzNmM2YzZjtcclxuJHdoaXRlOiAjZWVlZWVlO1xyXG4kcmVkOiAjZmYwMDRjO1xyXG5cclxuJHNkLXRyYW5zOiBhbGwgMC4ycyBlYXNlLW91dDtcclxuXHJcbiRoLWhlYWQ6IDhyZW07XHJcbiRoLWZvb3Q6IGNhbGMoJGgtaGVhZCAqIDIpO1xyXG5cclxuJGZ6LWljb24tbGc6IDJyZW07XHJcbiRmei1pY29uLXNtOiA0cmVtO1xyXG5cclxuJGgxOiA2NHB4O1xyXG4kaDI6IDQ4cHg7XHJcbiRoMzogM3JlbTtcclxuJGg0OiAyLjRyZW07XHJcbiRoNTogMS44cmVtO1xyXG4kaDY6IDEuMnJlbTtcclxuXHJcbiRmei1sb2dvOiBjYWxjKCRoMSAqIDEuNSk7XHJcblxyXG5oMSB7XHJcbiAgICBmb250LXNpemU6ICRoMTtcclxufVxyXG5oMiB7XHJcbiAgICBmb250LXNpemU6ICRoMjtcclxufVxyXG5oMyB7XHJcbiAgICBmb250LXNpemU6ICRoMztcclxufVxyXG5oNCB7XHJcbiAgICBmb250LXNpemU6ICRoNDtcclxufVxyXG5oNSB7XHJcbiAgICBmb250LXNpemU6ICRoNTtcclxufVxyXG5oNiB7XHJcbiAgICBmb250LXNpemU6ICRoNjtcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDE5MjBweDtcclxuICAgIHBhZGRpbmc6IDAgMTcwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuOnJvb3Qge1xyXG4gICAgLS10aGVtZTogI3skdGhlbWV9O1xyXG4gICAgLS1kYXJrOiAje2RhcmtlbigkdGhlbWUsIDEwJSl9O1xyXG4gICAgLS1saWdodDogI3tsaWdodGVuKCR0aGVtZSwgMTAlKX07XHJcbiAgICAtLXYtbGlnaHQ6ICN7bGlnaHRlbigkdGhlbWUsIDMwJSl9O1xyXG4gICAgLS1mb2N1czogI3t0cmFuc3BhcmVudGl6ZSgkdGhlbWUsIDAuNyl9O1xyXG4gICAgLS1vcGFjaXR5OiAje3RyYW5zcGFyZW50aXplKCR0aGVtZSwgMC45KX07XHJcbiAgICAtLXYtb3BhY2l0eTogI3t0cmFuc3BhcmVudGl6ZSgkdGhlbWUsIDAuOTUpfTtcclxuXHJcbiAgICAtLWJsYWNrOiAjeyRibGFja307XHJcbiAgICAtLXdoaXRlOiAjeyR3aGl0ZX07XHJcbiAgICAtLXJlZDogI3skcmVkfTtcclxuXHJcbiAgICAtLWZvbnQ6ICN7JGZvbnR9O1xyXG4gICAgLS1zZWNvbmQtZm9udDogI3skZm9udC1zZWNvbmRhcnl9O1xyXG4gICAgLS10aGlyZC1mb250OiAjeyRmb250LXRoaXJkeX07XHJcblxyXG4gICAgLS1zZC10cmFuczogI3skc2QtdHJhbnN9O1xyXG5cclxuICAgIC0taC1oZWFkOiAjeyRoLWhlYWR9O1xyXG4gICAgLS1oLWZvb3Q6ICN7JGgtZm9vdH07XHJcblxyXG4gICAgLS1mei1pY29uLWxnOiAjeyRmei1pY29uLWxnfTtcclxuICAgIC0tZnotaWNvbi1zbTogI3skZnotaWNvbi1zbX07XHJcblxyXG4gICAgLS1oMTogI3skaDF9O1xyXG4gICAgLS1oMjogI3skaDJ9O1xyXG4gICAgLS1oMzogI3skaDN9O1xyXG4gICAgLS1oNDogI3skaDR9O1xyXG4gICAgLS1oNTogI3skaDV9O1xyXG4gICAgLS1oNjogI3skaDZ9O1xyXG59XHJcbiIsIkBpbXBvcnQgXCJnbG9iYWwvX3Jlc2V0LnNjc3NcIjtcbkBpbXBvcnQgXCJnbG9iYWwvX3ZhcnMuc2Nzc1wiO1xyXG4vL0BpbXBvcnQgXCJwbHVnaW5zLyouc2Nzc1wiO1xyXG5cclxuXHJcbmJvZHkge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XHJcbiAgZm9udC1mYW1pbHk6ICRmb250O1xyXG4gIGZvbnQtc2l6ZTogMS42cmVtO1xyXG59XHJcblxyXG4uaGVhZGVyIHtcclxuICBiYWNrZ3JvdW5kOiB2YXIoLS10aGVtZSk7XHJcbiAgJi1pbm5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB9XHJcbiAgdWwge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGdhcDogMjBweDtcclxuICAgIGxpIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgZ2FwOiAxMHB4O1xyXG4gICAgICBjb2xvcjogdmFyKC0td2hpdGUpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLm1haW4ge1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvbWFpbkJnLnBuZykgbm8tcmVwZWF0O1xyXG4gICYtaXRlbSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGdhcDogMjBweDtcclxuICAgIGhlaWdodDogOTAwcHg7XHJcbiAgICAmLXJldmVyc2Uge1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XHJcbiAgICB9XHJcbiAgfVxyXG4gICYtYXJ0aWNsZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgd2lkdGg6IDg0MHB4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGdhcDogMjBweDtcclxuICAgIGNvbG9yOiB2YXIoLS1ibGFjayk7XHJcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udCk7XHJcbiAgICBwIHtcclxuICAgICAgZm9udC1zaXplOiAzMnB4O1xyXG4gICAgfVxyXG4gIH1cclxuICAmLWJ0biB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUpO1xyXG4gICAgY29sb3I6IHZhcigtLWJsYWNrKTtcclxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XHJcbiAgICBwYWRkaW5nOiA0OHB4IDE2OHB4O1xyXG4gIH1cclxufVxyXG5cclxuLmZvb3RlciB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIGJvdHRvbTogMDtcclxuICB3aWR0aDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZSk7XHJcbiAgJi1pbm5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgaGVpZ2h0OiAxMzBweDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgfVxyXG4gICYtdGV4dCB7XHJcbiAgICBmb250LWZhbWlseTogdmFyKC0tdGhpcmQtZm9udCk7XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgfVxyXG4gICYtcmVkIHtcclxuICAgIGNvbG9yOiB2YXIoLS1yZWQpO1xyXG4gIH1cclxuICAmLWJveGVzIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJvdHRvbTogMzAlO1xyXG4gIH1cclxuICAmLWJ0biB7XHJcbiAgICBwYWRkaW5nOiAxNnB4IDEyNHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICB9XHJcbiAgJi1leGl0IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB9XHJcbn1cclxuXHJcbi5jb250YWN0LWZvcm0ge1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvY29udGFjdEJnLnBuZykgbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IHRvcDtcclxuICBwYWRkaW5nOiAxNTBweCAwIDI1MHB4O1xyXG4gIC5jdXJzaXZlIHtcclxuICAgIGNvbG9yOiAjM2EzYTNhO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIGZvbnQtc2l6ZTogNDhweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBzcGFuIHtcclxuICAgICAgY29sb3I6IHZhcigtLXRoZW1lKTtcclxuICAgIH1cclxuICB9XHJcbiAgLmNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgfVxyXG4gIGgxIHtcclxuICAgIGNvbG9yOiB2YXIoLS1ibGFjayk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG4gICAgZm9udC1zaXplOiA2NHB4O1xyXG4gIH1cclxuICAuZm9ybSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZSk7XHJcbiAgICBib3gtc2hhZG93OiBpbnNldCAwcHggMHB4IDMzcHggMjRweCAjYmI2NzgwO1xyXG4gICAgcGFkZGluZzogNTBweCAxMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDU2cHg7XHJcbiAgICBoMiB7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgY29sb3I6IHZhcigtLWJsYWNrKTtcclxuICAgICAgdGV4dC1zaGFkb3c6IC0ycHggMXB4IDJweCByZ2JhKDIzOSwgMjM5LCAyMzksIDAuNzkpO1xyXG4gICAgfVxyXG4gICAgJi1pdGVtIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgY29sb3I6IHZhcigtLWJsYWNrKTtcclxuICAgICAgZm9udC1zaXplOiAyNnB4O1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA3MHB4O1xyXG4gICAgICBpbnB1dCB7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMy4zMXB4IDMuMzFweCAzLjMxcHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xyXG4gICAgICAgIHdpZHRoOiAxMDU4cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA3NXB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWxvZ28ge1xyXG4gICAgICBpbWcge1xyXG4gICAgICAgIHdpZHRoOiAxMjMwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiA2OTNweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtYnRuIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBtYXJnaW4tdG9wOiAxNDBweDtcclxuICAgICAgZm9udC1zaXplOiAyNnB4O1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICBjb2xvcjogdmFyKC0td2hpdGUpO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA2MHB4O1xyXG4gICAgICBwYWRkaW5nOiAyNnB4IDQyMHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwO1xyXG4gICAgfVxyXG4gICAgJi1mb290ZXIge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAuc29jaWFscyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBnYXA6IDY3cHg7XHJcbiAgICAgIH1cclxuICAgICAgLmNvcHlwYXN0IHtcclxuICAgICAgICBtYXJnaW46IDcxcHggMDtcclxuICAgICAgICBjb2xvcjogdmFyKC0tdGhlbWUpO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgfVxyXG4gICAgICB1bCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBnYXA6IDEwcHg7XHJcbiAgICAgICAgY29sb3I6IHZhcigtLXRoZW1lKTtcclxuICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5zdHJhaWdodCB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHdpZHRoOiAycHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUpO1xyXG59XHJcblxyXG4uZGlzY291bnQge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUlO1xyXG4gIHJpZ2h0OiAxMCU7XHJcbn1cclxuXHJcbi5sZWZ0R2lybCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGhlaWdodDogOTAwcHg7XHJcbiAgdG9wOiA5JTtcclxuICBsZWZ0OiAtMy41JTtcclxufVxyXG5cclxuLnJpZ2h0R2lybCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGhlaWdodDogOTAwcHg7XHJcbiAgdG9wOiAxNiU7XHJcbiAgcmlnaHQ6IDMlO1xyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAuY29udGFpbmVyIHtcclxuICAgIHBhZGRpbmc6IDAgMTdweDtcclxuICB9XHJcbiAgLmZvb3RlciB7XHJcbiAgICAmLXRleHQge1xyXG4gICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICB9XHJcbiAgICAmLWJ0biB7XHJcbiAgICAgIHBhZGRpbmc6IDZweCA4M3B4O1xyXG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgfVxyXG4gICAgJi1pbm5lciB7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBub3JtYWw7XHJcbiAgICAgIHBhZGRpbmc6IDhweCAwO1xyXG4gICAgfVxyXG4gICAgJi1ib3hlcyB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICAmLWV4aXQge1xyXG4gICAgICByaWdodDogMDtcclxuICAgICAgdG9wOiA4cHg7XHJcbiAgICB9XHJcbiAgICAmLXdoaXRlIHtcclxuICAgICAgY29sb3I6IHZhcigtLXJlZCk7XHJcbiAgICB9XHJcbiAgICAmLXJlZCB7XHJcbiAgICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0= */